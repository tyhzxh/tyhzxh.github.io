<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>计算机网络 on tyhzxh的个人博客</title>
    <link>http://localhost:1313/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 计算机网络 on tyhzxh的个人博客</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 06 Aug 2025 08:51:21 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>计算机网络概述：从OSI模型到TCP/IP协议栈</title>
      <link>http://localhost:1313/posts/computer-network-overview/</link>
      <pubDate>Mon, 25 Mar 2024 22:24:11 +0800</pubDate>
      <guid>http://localhost:1313/posts/computer-network-overview/</guid>
      <description>深入解析计算机网络的核心概念，包括OSI七层模型和TCP/IP四层模型的对比，以及HTTP、TCP、IP等重要协议的工作原理和应用场景</description>
      <content:encoded><![CDATA[<h2 id="计算机网络基础概述">计算机网络基础概述</h2>
<p>计算机网络是现代信息技术的基础设施，理解网络模型和协议对于任何IT从业者都至关重要。本文将深入探讨网络分层模型、核心协议及其实际应用。</p>
<h2 id="网络分层模型对比">网络分层模型对比</h2>
<h3 id="osi七层模型">OSI七层模型</h3>
<p><strong>OSI（Open Systems Interconnection）模型</strong>是国际标准化组织制定的网络通信标准模型，将网络通信分为七个层次：</p>
<table>
  <thead>
      <tr>
          <th>层次</th>
          <th>名称</th>
          <th>功能描述</th>
          <th>典型协议/技术</th>
          <th>数据单位</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>第7层</strong></td>
          <td>应用层</td>
          <td>为应用程序提供网络服务</td>
          <td>HTTP、HTTPS、FTP、SMTP、DNS</td>
          <td>数据</td>
      </tr>
      <tr>
          <td><strong>第6层</strong></td>
          <td>表示层</td>
          <td>数据格式转换、加密解密、压缩</td>
          <td>SSL/TLS、JPEG、MPEG</td>
          <td>数据</td>
      </tr>
      <tr>
          <td><strong>第5层</strong></td>
          <td>会话层</td>
          <td>建立、管理、终止会话连接</td>
          <td>NetBIOS、RPC、SQL</td>
          <td>数据</td>
      </tr>
      <tr>
          <td><strong>第4层</strong></td>
          <td>传输层</td>
          <td>端到端的可靠数据传输</td>
          <td>TCP、UDP</td>
          <td>段（Segment）</td>
      </tr>
      <tr>
          <td><strong>第3层</strong></td>
          <td>网络层</td>
          <td>路径选择和逻辑地址</td>
          <td>IP、ICMP、OSPF、BGP</td>
          <td>包（Packet）</td>
      </tr>
      <tr>
          <td><strong>第2层</strong></td>
          <td>数据链路层</td>
          <td>物理地址和错误检测</td>
          <td>Ethernet、WiFi、PPP</td>
          <td>帧（Frame）</td>
      </tr>
      <tr>
          <td><strong>第1层</strong></td>
          <td>物理层</td>
          <td>电气、物理、功能和过程特性</td>
          <td>双绞线、光纤、无线电波</td>
          <td>比特（Bit）</td>
      </tr>
  </tbody>
</table>
<h3 id="tcpip四层模型">TCP/IP四层模型</h3>
<p><strong>TCP/IP模型</strong>是互联网实际使用的网络模型，更加实用和简化：</p>
<table>
  <thead>
      <tr>
          <th>TCP/IP层次</th>
          <th>功能描述</th>
          <th>对应OSI层</th>
          <th>主要协议</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>应用层</strong></td>
          <td>应用程序接口和服务</td>
          <td>应用层+表示层+会话层</td>
          <td>HTTP、HTTPS、FTP、SMTP、DNS、SSH</td>
      </tr>
      <tr>
          <td><strong>传输层</strong></td>
          <td>端到端通信和数据完整性</td>
          <td>传输层</td>
          <td>TCP、UDP</td>
      </tr>
      <tr>
          <td><strong>网络层</strong></td>
          <td>路由和寻址</td>
          <td>网络层</td>
          <td>IP、ICMP、ARP</td>
      </tr>
      <tr>
          <td><strong>网络接口层</strong></td>
          <td>物理网络访问</td>
          <td>数据链路层+物理层</td>
          <td>Ethernet、WiFi、PPP</td>
      </tr>
  </tbody>
</table>
<h3 id="两种模型的对比">两种模型的对比</h3>
<pre tabindex="0"><code>OSI七层模型                    TCP/IP四层模型
┌─────────────┐               ┌─────────────┐
│   应用层    │               │             │
├─────────────┤               │   应用层    │
│   表示层    │               │             │
├─────────────┤               │             │
│   会话层    │               │             │
├─────────────┤               ├─────────────┤
│   传输层    │  ────────────  │   传输层    │
├─────────────┤               ├─────────────┤
│   网络层    │  ────────────  │   网络层    │
├─────────────┤               ├─────────────┤
│ 数据链路层  │               │ 网络接口层  │
├─────────────┤               │             │
│   物理层    │               │             │
└─────────────┘               └─────────────┘
</code></pre><h2 id="核心协议详解">核心协议详解</h2>
<h3 id="http协议超文本传输协议">HTTP协议（超文本传输协议）</h3>
<h4 id="http基本概念">HTTP基本概念</h4>
<p>**HTTP（HyperText Transfer Protocol）**是应用层协议，用于在Web浏览器和Web服务器之间传输数据。</p>
<h4 id="http工作原理">HTTP工作原理</h4>
<pre tabindex="0"><code>客户端                                    服务器
   │                                        │
   │ ──── HTTP请求（Request） ────────────→ │
   │                                        │
   │ ←──── HTTP响应（Response） ─────────── │
   │                                        │
</code></pre><h4 id="http请求结构">HTTP请求结构</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="nf">GET</span> <span class="nn">/api/users/123</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">www.example.com</span>
</span></span><span class="line"><span class="cl"><span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (Windows NT 10.0; Win64; x64)</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept</span><span class="o">:</span> <span class="l">application/json</span>
</span></span><span class="line"><span class="cl"><span class="n">Authorization</span><span class="o">:</span> <span class="l">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">85</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;zhangsan@example.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="http响应结构">HTTP响应结构</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
</span></span><span class="line"><span class="cl"><span class="n">Date</span><span class="o">:</span> <span class="l">Mon, 25 Mar 2024 10:30:00 GMT</span>
</span></span><span class="line"><span class="cl"><span class="n">Server</span><span class="o">:</span> <span class="l">nginx/1.18.0</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/json; charset=utf-8</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">156</span>
</span></span><span class="line"><span class="cl"><span class="n">Cache-Control</span><span class="o">:</span> <span class="l">no-cache</span>
</span></span><span class="line"><span class="cl"><span class="n">Set-Cookie</span><span class="o">:</span> <span class="l">sessionid=abc123; Path=/; HttpOnly</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">123</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;zhangsan@example.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;created_at&#34;</span><span class="p">:</span> <span class="s2">&#34;2024-03-25T10:30:00Z&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="http方法详解">HTTP方法详解</h4>
<table>
  <thead>
      <tr>
          <th>方法</th>
          <th>用途</th>
          <th>幂等性</th>
          <th>安全性</th>
          <th>示例</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>GET</strong></td>
          <td>获取资源</td>
          <td>✓</td>
          <td>✓</td>
          <td><code>GET /api/users</code></td>
      </tr>
      <tr>
          <td><strong>POST</strong></td>
          <td>创建资源</td>
          <td>✗</td>
          <td>✗</td>
          <td><code>POST /api/users</code></td>
      </tr>
      <tr>
          <td><strong>PUT</strong></td>
          <td>更新/创建资源</td>
          <td>✓</td>
          <td>✗</td>
          <td><code>PUT /api/users/123</code></td>
      </tr>
      <tr>
          <td><strong>PATCH</strong></td>
          <td>部分更新资源</td>
          <td>✗</td>
          <td>✗</td>
          <td><code>PATCH /api/users/123</code></td>
      </tr>
      <tr>
          <td><strong>DELETE</strong></td>
          <td>删除资源</td>
          <td>✓</td>
          <td>✗</td>
          <td><code>DELETE /api/users/123</code></td>
      </tr>
      <tr>
          <td><strong>HEAD</strong></td>
          <td>获取响应头</td>
          <td>✓</td>
          <td>✓</td>
          <td><code>HEAD /api/users/123</code></td>
      </tr>
      <tr>
          <td><strong>OPTIONS</strong></td>
          <td>获取支持的方法</td>
          <td>✓</td>
          <td>✓</td>
          <td><code>OPTIONS /api/users</code></td>
      </tr>
  </tbody>
</table>
<h4 id="http状态码">HTTP状态码</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-javascript" data-lang="javascript"><span class="line"><span class="cl"><span class="c1">// 1xx 信息性状态码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">100</span> <span class="nx">Continue</span>              <span class="c1">// 继续请求
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">101</span> <span class="nx">Switching</span> <span class="nx">Protocols</span>   <span class="c1">// 切换协议
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 2xx 成功状态码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">200</span> <span class="nx">OK</span>                    <span class="c1">// 请求成功
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">201</span> <span class="nx">Created</span>              <span class="c1">// 资源创建成功
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">204</span> <span class="nx">No</span> <span class="nx">Content</span>           <span class="c1">// 成功但无内容返回
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 3xx 重定向状态码
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">301</span> <span class="nx">Moved</span> <span class="nx">Permanently</span>    <span class="c1">// 永久重定向
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">302</span> <span class="nx">Found</span>               <span class="c1">// 临时重定向
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">304</span> <span class="nx">Not</span> <span class="nx">Modified</span>        <span class="c1">// 资源未修改
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 4xx 客户端错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">400</span> <span class="nx">Bad</span> <span class="nx">Request</span>         <span class="c1">// 请求语法错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">401</span> <span class="nx">Unauthorized</span>        <span class="c1">// 未授权
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">403</span> <span class="nx">Forbidden</span>          <span class="c1">// 禁止访问
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">404</span> <span class="nx">Not</span> <span class="nx">Found</span>          <span class="c1">// 资源不存在
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">429</span> <span class="nx">Too</span> <span class="nx">Many</span> <span class="nx">Requests</span>  <span class="c1">// 请求过多
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>
</span></span><span class="line"><span class="cl"><span class="c1">// 5xx 服务器错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">500</span> <span class="nx">Internal</span> <span class="nx">Server</span> <span class="nb">Error</span>  <span class="c1">// 服务器内部错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">502</span> <span class="nx">Bad</span> <span class="nx">Gateway</span>           <span class="c1">// 网关错误
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="mi">503</span> <span class="nx">Service</span> <span class="nx">Unavailable</span>   <span class="c1">// 服务不可用
</span></span></span></code></pre></div><h4 id="https安全增强">HTTPS安全增强</h4>
<pre tabindex="0"><code>HTTP + SSL/TLS = HTTPS

客户端                                    服务器
   │                                        │
   │ ──── SSL握手（建立安全连接） ────────→ │
   │ ←──── 证书验证 ─────────────────────── │
   │ ──── 加密的HTTP请求 ─────────────────→ │
   │ ←──── 加密的HTTP响应 ────────────────── │
   │                                        │
</code></pre><h3 id="tcp协议传输控制协议">TCP协议（传输控制协议）</h3>
<h4 id="tcp基本特性">TCP基本特性</h4>
<p>**TCP（Transmission Control Protocol）**是面向连接的、可靠的传输层协议。</p>
<h4 id="tcp核心特性">TCP核心特性</h4>
<table>
  <thead>
      <tr>
          <th>特性</th>
          <th>描述</th>
          <th>实现机制</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>面向连接</strong></td>
          <td>通信前需建立连接</td>
          <td>三次握手建立连接</td>
      </tr>
      <tr>
          <td><strong>可靠传输</strong></td>
          <td>保证数据完整性</td>
          <td>序列号、确认应答、重传</td>
      </tr>
      <tr>
          <td><strong>流量控制</strong></td>
          <td>防止发送方过快</td>
          <td>滑动窗口机制</td>
      </tr>
      <tr>
          <td><strong>拥塞控制</strong></td>
          <td>防止网络拥塞</td>
          <td>慢启动、拥塞避免</td>
      </tr>
      <tr>
          <td><strong>全双工通信</strong></td>
          <td>双向数据传输</td>
          <td>独立的发送和接收缓冲区</td>
      </tr>
  </tbody>
</table>
<h4 id="tcp三次握手">TCP三次握手</h4>
<pre tabindex="0"><code>客户端                                    服务器
   │                                        │
   │ ──── SYN（seq=x） ──────────────────→ │  第一次握手
   │                                        │
   │ ←──── SYN+ACK（seq=y, ack=x+1） ───── │  第二次握手
   │                                        │
   │ ──── ACK（seq=x+1, ack=y+1） ───────→ │  第三次握手
   │                                        │
   │ ═══════ 连接建立，开始数据传输 ═══════ │
</code></pre><h4 id="tcp四次挥手">TCP四次挥手</h4>
<pre tabindex="0"><code>客户端                                    服务器
   │                                        │
   │ ──── FIN（seq=u） ──────────────────→ │  第一次挥手
   │                                        │
   │ ←──── ACK（ack=u+1） ────────────────── │  第二次挥手
   │                                        │
   │ ←──── FIN（seq=v） ────────────────── │  第三次挥手
   │                                        │
   │ ──── ACK（ack=v+1） ────────────────→ │  第四次挥手
   │                                        │
   │ ═══════ 连接关闭 ═══════════════════ │
</code></pre><h4 id="tcp-vs-udp对比">TCP vs UDP对比</h4>
<table>
  <thead>
      <tr>
          <th>特性</th>
          <th>TCP</th>
          <th>UDP</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>连接性</strong></td>
          <td>面向连接</td>
          <td>无连接</td>
      </tr>
      <tr>
          <td><strong>可靠性</strong></td>
          <td>可靠传输</td>
          <td>不可靠传输</td>
      </tr>
      <tr>
          <td><strong>速度</strong></td>
          <td>较慢（开销大）</td>
          <td>较快（开销小）</td>
      </tr>
      <tr>
          <td><strong>数据边界</strong></td>
          <td>字节流</td>
          <td>数据报</td>
      </tr>
      <tr>
          <td><strong>应用场景</strong></td>
          <td>HTTP、FTP、邮件</td>
          <td>DNS、视频流、游戏</td>
      </tr>
  </tbody>
</table>
<h3 id="ip协议网际协议">IP协议（网际协议）</h3>
<h4 id="ip协议概述">IP协议概述</h4>
<p>**IP（Internet Protocol）**是网络层协议，负责在网络中路由数据包。</p>
<h4 id="ipv4地址结构">IPv4地址结构</h4>
<pre tabindex="0"><code>IPv4地址：32位，分为4个8位字节
示例：192.168.1.100

二进制表示：
11000000.10101000.00000001.01100100

地址分类：
A类：1.0.0.0    - 126.255.255.255  （/8）
B类：128.0.0.0  - 191.255.255.255  （/16）
C类：192.0.0.0  - 223.255.255.255  （/24）
</code></pre><h4 id="私有ip地址范围">私有IP地址范围</h4>
<table>
  <thead>
      <tr>
          <th>类别</th>
          <th>地址范围</th>
          <th>子网掩码</th>
          <th>用途</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>A类私有</td>
          <td>10.0.0.0 - 10.255.255.255</td>
          <td>255.0.0.0</td>
          <td>大型企业网络</td>
      </tr>
      <tr>
          <td>B类私有</td>
          <td>172.16.0.0 - 172.31.255.255</td>
          <td>255.240.0.0</td>
          <td>中型企业网络</td>
      </tr>
      <tr>
          <td>C类私有</td>
          <td>192.168.0.0 - 192.168.255.255</td>
          <td>255.255.0.0</td>
          <td>家庭/小型网络</td>
      </tr>
  </tbody>
</table>
<h4 id="ipv6地址结构">IPv6地址结构</h4>
<pre tabindex="0"><code>IPv6地址：128位，分为8组，每组4个十六进制数字
示例：2001:0db8:85a3:0000:0000:8a2e:0370:7334

简化表示：
2001:db8:85a3::8a2e:370:7334

地址类型：
单播地址：一对一通信
组播地址：一对多通信
任播地址：一对最近一个通信
</code></pre><h2 id="网络通信实例">网络通信实例</h2>
<h3 id="完整的http请求过程">完整的HTTP请求过程</h3>
<pre tabindex="0"><code>1. DNS解析
   www.example.com → 93.184.216.34

2. TCP连接建立（三次握手）
   客户端:1234 ←→ 服务器:80

3. HTTP请求发送
   GET / HTTP/1.1
   Host: www.example.com

4. HTTP响应接收
   HTTP/1.1 200 OK
   Content-Type: text/html

5. TCP连接关闭（四次挥手）
</code></pre><h3 id="数据包封装过程">数据包封装过程</h3>
<pre tabindex="0"><code>应用层：HTTP数据
    ↓
传输层：TCP头部 + HTTP数据
    ↓
网络层：IP头部 + TCP头部 + HTTP数据
    ↓
数据链路层：以太网头部 + IP头部 + TCP头部 + HTTP数据 + 以太网尾部
    ↓
物理层：电信号/光信号
</code></pre><h2 id="网络安全基础">网络安全基础</h2>
<h3 id="常见网络攻击">常见网络攻击</h3>
<table>
  <thead>
      <tr>
          <th>攻击类型</th>
          <th>描述</th>
          <th>防护措施</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>DDoS攻击</strong></td>
          <td>分布式拒绝服务</td>
          <td>流量清洗、CDN</td>
      </tr>
      <tr>
          <td><strong>中间人攻击</strong></td>
          <td>截获通信内容</td>
          <td>HTTPS、证书验证</td>
      </tr>
      <tr>
          <td><strong>SQL注入</strong></td>
          <td>恶意SQL代码</td>
          <td>参数化查询、输入验证</td>
      </tr>
      <tr>
          <td><strong>XSS攻击</strong></td>
          <td>跨站脚本攻击</td>
          <td>输入过滤、CSP策略</td>
      </tr>
  </tbody>
</table>
<h3 id="网络安全协议">网络安全协议</h3>
<pre tabindex="0"><code>SSL/TLS：传输层安全
IPSec：网络层安全
WPA/WPA2：无线网络安全
SSH：安全远程访问
</code></pre><h2 id="网络性能优化">网络性能优化</h2>
<h3 id="常见优化技术">常见优化技术</h3>
<ol>
<li>
<p><strong>CDN（内容分发网络）</strong></p>
<ul>
<li>就近访问，减少延迟</li>
<li>分担源服务器压力</li>
</ul>
</li>
<li>
<p><strong>负载均衡</strong></p>
<ul>
<li>分散请求到多台服务器</li>
<li>提高系统可用性</li>
</ul>
</li>
<li>
<p><strong>缓存策略</strong></p>
<ul>
<li>浏览器缓存</li>
<li>代理服务器缓存</li>
<li>应用层缓存</li>
</ul>
</li>
<li>
<p><strong>压缩技术</strong></p>
<ul>
<li>Gzip压缩</li>
<li>Brotli压缩</li>
<li>图片压缩</li>
</ul>
</li>
</ol>
<h3 id="网络监控指标">网络监控指标</h3>
<table>
  <thead>
      <tr>
          <th>指标</th>
          <th>描述</th>
          <th>正常范围</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>延迟（Latency）</strong></td>
          <td>数据传输时间</td>
          <td>&lt; 100ms</td>
      </tr>
      <tr>
          <td><strong>带宽（Bandwidth）</strong></td>
          <td>数据传输速率</td>
          <td>根据需求</td>
      </tr>
      <tr>
          <td><strong>丢包率（Packet Loss）</strong></td>
          <td>数据包丢失比例</td>
          <td>&lt; 1%</td>
      </tr>
      <tr>
          <td><strong>吞吐量（Throughput）</strong></td>
          <td>实际数据传输量</td>
          <td>接近带宽</td>
      </tr>
  </tbody>
</table>
<h2 id="实际应用场景">实际应用场景</h2>
<h3 id="web应用架构">Web应用架构</h3>
<pre tabindex="0"><code>用户浏览器
    ↓ HTTP/HTTPS
负载均衡器
    ↓ HTTP
Web服务器（Nginx/Apache）
    ↓ HTTP/FastCGI
应用服务器（Node.js/Java/Python）
    ↓ TCP/IP
数据库服务器（MySQL/PostgreSQL）
</code></pre><h3 id="微服务通信">微服务通信</h3>
<pre tabindex="0"><code>服务A ←─ HTTP/REST ─→ 服务B
  │                      │
  └─ gRPC/TCP ─→ 服务C ←─┘
  │                      │
  └─ Message Queue ─→ 服务D
</code></pre><h2 id="学习建议">学习建议</h2>
<h3 id="理论学习路径">理论学习路径</h3>
<ol>
<li><strong>基础概念</strong>：理解网络分层模型</li>
<li><strong>协议原理</strong>：深入学习TCP/IP、HTTP</li>
<li><strong>网络编程</strong>：Socket编程实践</li>
<li><strong>安全知识</strong>：网络安全基础</li>
<li><strong>性能优化</strong>：网络调优技术</li>
</ol>
<h3 id="实践项目建议">实践项目建议</h3>
<ol>
<li><strong>搭建简单Web服务器</strong></li>
<li><strong>实现HTTP客户端</strong></li>
<li><strong>网络抓包分析</strong></li>
<li><strong>配置负载均衡</strong></li>
<li><strong>部署HTTPS证书</strong></li>
</ol>
<h2 id="总结">总结</h2>
<p>计算机网络是现代信息技术的基础，理解网络模型和协议对于：</p>
<ul>
<li><strong>开发人员</strong>：编写网络应用程序</li>
<li><strong>运维人员</strong>：网络故障排查和优化</li>
<li><strong>架构师</strong>：设计分布式系统</li>
<li><strong>安全工程师</strong>：网络安全防护</li>
</ul>
<p>掌握这些基础知识将为深入学习更高级的网络技术打下坚实基础。建议结合理论学习和实际操作，通过抓包分析、网络编程等方式加深理解。</p>
]]></content:encoded>
    </item>
    <item>
      <title>TCP协议深度解析：可靠传输的核心机制</title>
      <link>http://localhost:1313/posts/tcp-protocol-guide/</link>
      <pubDate>Wed, 28 Feb 2024 14:30:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/tcp-protocol-guide/</guid>
      <description>深入解析TCP协议的工作原理、三次握手、四次挥手、流量控制、拥塞控制等核心机制，以及TCP在现代网络中的应用和优化</description>
      <content:encoded><![CDATA[<h2 id="tcp协议概述">TCP协议概述</h2>
<p>**TCP（Transmission Control Protocol）**是互联网协议套件中的核心协议之一，位于传输层，为应用层提供可靠的、面向连接的字节流服务。TCP确保数据的完整性、顺序性和可靠性，是现代互联网通信的基石。</p>
<h3 id="tcp的核心特性">TCP的核心特性</h3>
<table>
  <thead>
      <tr>
          <th>特性</th>
          <th>描述</th>
          <th>优势</th>
          <th>应用场景</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>面向连接</strong></td>
          <td>通信前需建立连接</td>
          <td>确保通信双方准备就绪</td>
          <td>需要可靠传输的应用</td>
      </tr>
      <tr>
          <td><strong>可靠传输</strong></td>
          <td>保证数据完整到达</td>
          <td>数据不丢失、不重复</td>
          <td>文件传输、网页浏览</td>
      </tr>
      <tr>
          <td><strong>流量控制</strong></td>
          <td>控制发送速率</td>
          <td>防止接收方缓冲区溢出</td>
          <td>处理能力不同的设备</td>
      </tr>
      <tr>
          <td><strong>拥塞控制</strong></td>
          <td>避免网络拥塞</td>
          <td>提高网络整体性能</td>
          <td>高负载网络环境</td>
      </tr>
      <tr>
          <td><strong>全双工通信</strong></td>
          <td>双向同时传输</td>
          <td>提高通信效率</td>
          <td>实时交互应用</td>
      </tr>
  </tbody>
</table>
<h2 id="tcp报文段结构">TCP报文段结构</h2>
<h3 id="tcp头部格式">TCP头部格式</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPHeader</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP头部结构解析&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">header_fields</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;源端口&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;0-15&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;16位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;发送方端口号&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;目标端口&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;16-31&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;16位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;接收方端口号&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;32-63&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;32位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;数据字节的序列号&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;64-95&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;32位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;期望接收的下一个序列号&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;头部长度&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;96-99&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;4位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;TCP头部长度&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;保留位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;100-105&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;6位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;保留字段&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;控制位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;106-111&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;6位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;URG、ACK、PSH、RST、SYN、FIN&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;窗口大小&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;112-127&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;16位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;接收窗口大小&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;校验和&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;128-143&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;16位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;错误检测&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;紧急指针&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;144-159&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;16位&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;紧急数据指针&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;选项&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;位置&#34;</span><span class="p">:</span> <span class="s2">&#34;160+&#34;</span><span class="p">,</span> <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="s2">&#34;可变&#34;</span><span class="p">,</span> <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;TCP选项字段&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">parse_flags</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">flags_byte</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;解析TCP标志位&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">flags</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;URG&#34;</span><span class="p">:</span> <span class="nb">bool</span><span class="p">(</span><span class="n">flags_byte</span> <span class="o">&amp;</span> <span class="mh">0x20</span><span class="p">),</span>  <span class="c1"># 紧急</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="nb">bool</span><span class="p">(</span><span class="n">flags_byte</span> <span class="o">&amp;</span> <span class="mh">0x10</span><span class="p">),</span>  <span class="c1"># 确认</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;PSH&#34;</span><span class="p">:</span> <span class="nb">bool</span><span class="p">(</span><span class="n">flags_byte</span> <span class="o">&amp;</span> <span class="mh">0x08</span><span class="p">),</span>  <span class="c1"># 推送</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;RST&#34;</span><span class="p">:</span> <span class="nb">bool</span><span class="p">(</span><span class="n">flags_byte</span> <span class="o">&amp;</span> <span class="mh">0x04</span><span class="p">),</span>  <span class="c1"># 重置</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;SYN&#34;</span><span class="p">:</span> <span class="nb">bool</span><span class="p">(</span><span class="n">flags_byte</span> <span class="o">&amp;</span> <span class="mh">0x02</span><span class="p">),</span>  <span class="c1"># 同步</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;FIN&#34;</span><span class="p">:</span> <span class="nb">bool</span><span class="p">(</span><span class="n">flags_byte</span> <span class="o">&amp;</span> <span class="mh">0x01</span><span class="p">)</span>   <span class="c1"># 结束</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">flags</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">create_segment</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">src_port</span><span class="p">,</span> <span class="n">dst_port</span><span class="p">,</span> <span class="n">seq_num</span><span class="p">,</span> <span class="n">ack_num</span><span class="p">,</span> <span class="n">flags</span><span class="p">,</span> <span class="n">window_size</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="sa">b</span><span class="s1">&#39;&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;创建TCP报文段&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">segment</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;源端口&#34;</span><span class="p">:</span> <span class="n">src_port</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;目标端口&#34;</span><span class="p">:</span> <span class="n">dst_port</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="n">seq_num</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="n">ack_num</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;头部长度&#34;</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>  <span class="c1"># 基本头部长度</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="n">flags</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;窗口大小&#34;</span><span class="p">:</span> <span class="n">window_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;校验和&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>  <span class="c1"># 需要计算</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;数据&#34;</span><span class="p">:</span> <span class="n">data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;数据长度&#34;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 计算校验和</span>
</span></span><span class="line"><span class="cl">        <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;校验和&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">calculate_checksum</span><span class="p">(</span><span class="n">segment</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">segment</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">calculate_checksum</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">segment</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;计算TCP校验和（简化版）&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 实际实现需要包含伪头部</span>
</span></span><span class="line"><span class="cl">        <span class="n">checksum</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="n">checksum</span> <span class="o">+=</span> <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;源端口&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">checksum</span> <span class="o">+=</span> <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;目标端口&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">checksum</span> <span class="o">+=</span> <span class="p">(</span><span class="n">segment</span><span class="p">[</span><span class="s2">&#34;序列号&#34;</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">segment</span><span class="p">[</span><span class="s2">&#34;序列号&#34;</span><span class="p">]</span> <span class="o">&amp;</span> <span class="mh">0xFFFF</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">checksum</span> <span class="o">+=</span> <span class="p">(</span><span class="n">segment</span><span class="p">[</span><span class="s2">&#34;确认号&#34;</span><span class="p">]</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">segment</span><span class="p">[</span><span class="s2">&#34;确认号&#34;</span><span class="p">]</span> <span class="o">&amp;</span> <span class="mh">0xFFFF</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 处理进位</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="n">checksum</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">checksum</span> <span class="o">=</span> <span class="p">(</span><span class="n">checksum</span> <span class="o">&amp;</span> <span class="mh">0xFFFF</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">checksum</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="o">~</span><span class="n">checksum</span> <span class="o">&amp;</span> <span class="mh">0xFFFF</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># TCP报文段示例</span>
</span></span><span class="line"><span class="cl"><span class="n">tcp_header</span> <span class="o">=</span> <span class="n">TCPHeader</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 创建SYN报文段</span>
</span></span><span class="line"><span class="cl"><span class="n">syn_segment</span> <span class="o">=</span> <span class="n">tcp_header</span><span class="o">.</span><span class="n">create_segment</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">src_port</span><span class="o">=</span><span class="mi">12345</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">dst_port</span><span class="o">=</span><span class="mi">80</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">seq_num</span><span class="o">=</span><span class="mi">1000</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">ack_num</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">flags</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;SYN&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="n">window_size</span><span class="o">=</span><span class="mi">65535</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;SYN报文段:&#34;</span><span class="p">,</span> <span class="n">syn_segment</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 解析标志位</span>
</span></span><span class="line"><span class="cl"><span class="n">flags_byte</span> <span class="o">=</span> <span class="mh">0x02</span>  <span class="c1"># SYN标志</span>
</span></span><span class="line"><span class="cl"><span class="n">parsed_flags</span> <span class="o">=</span> <span class="n">tcp_header</span><span class="o">.</span><span class="n">parse_flags</span><span class="p">(</span><span class="n">flags_byte</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;解析的标志位:&#34;</span><span class="p">,</span> <span class="n">parsed_flags</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="tcp连接管理">TCP连接管理</h2>
<h3 id="三次握手连接建立">三次握手（连接建立）</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPConnection</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP连接管理&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s2">&#34;CLOSED&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">seq_num</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">ack_num</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">connections</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">three_way_handshake</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">client_id</span><span class="p">,</span> <span class="n">server_id</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;三次握手过程模拟&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 第一步：客户端发送SYN</span>
</span></span><span class="line"><span class="cl">        <span class="n">client_seq</span> <span class="o">=</span> <span class="mi">1000</span>
</span></span><span class="line"><span class="cl">        <span class="n">step1</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;步骤&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;发送方&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;接收方&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;报文类型&#34;</span><span class="p">:</span> <span class="s2">&#34;SYN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="n">client_seq</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;SYN&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;客户端请求建立连接&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态&#34;</span><span class="p">:</span> <span class="s2">&#34;SYN_SENT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态&#34;</span><span class="p">:</span> <span class="s2">&#34;LISTEN&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">step1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 第二步：服务器发送SYN+ACK</span>
</span></span><span class="line"><span class="cl">        <span class="n">server_seq</span> <span class="o">=</span> <span class="mi">2000</span>
</span></span><span class="line"><span class="cl">        <span class="n">step2</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;步骤&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;发送方&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;接收方&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;报文类型&#34;</span><span class="p">:</span> <span class="s2">&#34;SYN+ACK&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="n">server_seq</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="n">client_seq</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;SYN&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;服务器确认连接请求并发送自己的连接请求&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态&#34;</span><span class="p">:</span> <span class="s2">&#34;SYN_SENT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态&#34;</span><span class="p">:</span> <span class="s2">&#34;SYN_RCVD&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">step2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 第三步：客户端发送ACK</span>
</span></span><span class="line"><span class="cl">        <span class="n">step3</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;步骤&#34;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;发送方&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;接收方&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;报文类型&#34;</span><span class="p">:</span> <span class="s2">&#34;ACK&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="n">client_seq</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="n">server_seq</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;SYN&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;客户端确认服务器的连接请求&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态&#34;</span><span class="p">:</span> <span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态&#34;</span><span class="p">:</span> <span class="s2">&#34;ESTABLISHED&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">step3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 建立连接</span>
</span></span><span class="line"><span class="cl">        <span class="n">connection_id</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">client_id</span><span class="si">}</span><span class="s2">-</span><span class="si">{</span><span class="n">server_id</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">[</span><span class="n">connection_id</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端序列号&#34;</span><span class="p">:</span> <span class="n">client_seq</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器序列号&#34;</span><span class="p">:</span> <span class="n">server_seq</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;建立时间&#34;</span><span class="p">:</span> <span class="s2">&#34;2024-02-28T14:30:00Z&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;握手步骤&#34;</span><span class="p">:</span> <span class="n">handshake_steps</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;连接信息&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">[</span><span class="n">connection_id</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;连接ID&#34;</span><span class="p">:</span> <span class="n">connection_id</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">four_way_handshake</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">connection_id</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;四次挥手过程模拟&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">connection_id</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;错误&#34;</span><span class="p">:</span> <span class="s2">&#34;连接不存在&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">connection</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">[</span><span class="n">connection_id</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">client_id</span> <span class="o">=</span> <span class="n">connection</span><span class="p">[</span><span class="s2">&#34;客户端&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">server_id</span> <span class="o">=</span> <span class="n">connection</span><span class="p">[</span><span class="s2">&#34;服务器&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 第一步：客户端发送FIN</span>
</span></span><span class="line"><span class="cl">        <span class="n">step1</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;步骤&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;发送方&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;接收方&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;报文类型&#34;</span><span class="p">:</span> <span class="s2">&#34;FIN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;FIN&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;客户端请求关闭连接&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态&#34;</span><span class="p">:</span> <span class="s2">&#34;FIN_WAIT_1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态&#34;</span><span class="p">:</span> <span class="s2">&#34;ESTABLISHED&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">step1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 第二步：服务器发送ACK</span>
</span></span><span class="line"><span class="cl">        <span class="n">step2</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;步骤&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;发送方&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;接收方&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;报文类型&#34;</span><span class="p">:</span> <span class="s2">&#34;ACK&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;FIN&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;服务器确认客户端的关闭请求&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态&#34;</span><span class="p">:</span> <span class="s2">&#34;FIN_WAIT_2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态&#34;</span><span class="p">:</span> <span class="s2">&#34;CLOSE_WAIT&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">step2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 第三步：服务器发送FIN</span>
</span></span><span class="line"><span class="cl">        <span class="n">step3</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;步骤&#34;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;发送方&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;接收方&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;报文类型&#34;</span><span class="p">:</span> <span class="s2">&#34;FIN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;FIN&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;服务器请求关闭连接&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态&#34;</span><span class="p">:</span> <span class="s2">&#34;FIN_WAIT_2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态&#34;</span><span class="p">:</span> <span class="s2">&#34;LAST_ACK&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">step3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 第四步：客户端发送ACK</span>
</span></span><span class="line"><span class="cl">        <span class="n">step4</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;步骤&#34;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;发送方&#34;</span><span class="p">:</span> <span class="n">client_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;接收方&#34;</span><span class="p">:</span> <span class="n">server_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;报文类型&#34;</span><span class="p">:</span> <span class="s2">&#34;ACK&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;标志位&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;FIN&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">,</span> <span class="s2">&#34;ACK&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;客户端确认服务器的关闭请求&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态&#34;</span><span class="p">:</span> <span class="s2">&#34;TIME_WAIT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态&#34;</span><span class="p">:</span> <span class="s2">&#34;CLOSED&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="n">handshake_steps</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">step4</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 删除连接</span>
</span></span><span class="line"><span class="cl">        <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">[</span><span class="n">connection_id</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;挥手步骤&#34;</span><span class="p">:</span> <span class="n">handshake_steps</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;连接状态&#34;</span><span class="p">:</span> <span class="s2">&#34;已关闭&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 连接管理示例</span>
</span></span><span class="line"><span class="cl"><span class="n">tcp_conn</span> <span class="o">=</span> <span class="n">TCPConnection</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 建立连接</span>
</span></span><span class="line"><span class="cl"><span class="n">connection_result</span> <span class="o">=</span> <span class="n">tcp_conn</span><span class="o">.</span><span class="n">three_way_handshake</span><span class="p">(</span><span class="s2">&#34;Client_A&#34;</span><span class="p">,</span> <span class="s2">&#34;Server_B&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;三次握手结果:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">step</span> <span class="ow">in</span> <span class="n">connection_result</span><span class="p">[</span><span class="s2">&#34;握手步骤&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;步骤</span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;步骤&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;发送方&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2"> -&gt; </span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;接收方&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2"> (</span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;报文类型&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">) - </span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;描述&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">连接建立成功: </span><span class="si">{</span><span class="n">connection_result</span><span class="p">[</span><span class="s1">&#39;连接ID&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 关闭连接</span>
</span></span><span class="line"><span class="cl"><span class="n">close_result</span> <span class="o">=</span> <span class="n">tcp_conn</span><span class="o">.</span><span class="n">four_way_handshake</span><span class="p">(</span><span class="n">connection_result</span><span class="p">[</span><span class="s1">&#39;连接ID&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">四次挥手结果:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">step</span> <span class="ow">in</span> <span class="n">close_result</span><span class="p">[</span><span class="s2">&#34;挥手步骤&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;步骤</span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;步骤&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;发送方&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2"> -&gt; </span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;接收方&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2"> (</span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;报文类型&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">) - </span><span class="si">{</span><span class="n">step</span><span class="p">[</span><span class="s1">&#39;描述&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h3 id="tcp状态转换图">TCP状态转换图</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPStateMachine</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP状态机&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">states</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CLOSED&#34;</span><span class="p">:</span> <span class="s2">&#34;关闭状态&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;LISTEN&#34;</span><span class="p">:</span> <span class="s2">&#34;监听状态&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;SYN_SENT&#34;</span><span class="p">:</span> <span class="s2">&#34;已发送SYN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;SYN_RCVD&#34;</span><span class="p">:</span> <span class="s2">&#34;已接收SYN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">:</span> <span class="s2">&#34;连接已建立&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;FIN_WAIT_1&#34;</span><span class="p">:</span> <span class="s2">&#34;等待FIN确认&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;FIN_WAIT_2&#34;</span><span class="p">:</span> <span class="s2">&#34;等待对方FIN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CLOSE_WAIT&#34;</span><span class="p">:</span> <span class="s2">&#34;等待关闭&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;CLOSING&#34;</span><span class="p">:</span> <span class="s2">&#34;正在关闭&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;LAST_ACK&#34;</span><span class="p">:</span> <span class="s2">&#34;最后确认&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TIME_WAIT&#34;</span><span class="p">:</span> <span class="s2">&#34;时间等待&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">transitions</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;CLOSED&#34;</span><span class="p">,</span> <span class="s2">&#34;主动打开&#34;</span><span class="p">):</span> <span class="s2">&#34;SYN_SENT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;CLOSED&#34;</span><span class="p">,</span> <span class="s2">&#34;被动打开&#34;</span><span class="p">):</span> <span class="s2">&#34;LISTEN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;LISTEN&#34;</span><span class="p">,</span> <span class="s2">&#34;收到SYN&#34;</span><span class="p">):</span> <span class="s2">&#34;SYN_RCVD&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;SYN_SENT&#34;</span><span class="p">,</span> <span class="s2">&#34;收到SYN+ACK&#34;</span><span class="p">):</span> <span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;SYN_RCVD&#34;</span><span class="p">,</span> <span class="s2">&#34;收到ACK&#34;</span><span class="p">):</span> <span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span> <span class="s2">&#34;主动关闭&#34;</span><span class="p">):</span> <span class="s2">&#34;FIN_WAIT_1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span> <span class="s2">&#34;收到FIN&#34;</span><span class="p">):</span> <span class="s2">&#34;CLOSE_WAIT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;FIN_WAIT_1&#34;</span><span class="p">,</span> <span class="s2">&#34;收到ACK&#34;</span><span class="p">):</span> <span class="s2">&#34;FIN_WAIT_2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;FIN_WAIT_1&#34;</span><span class="p">,</span> <span class="s2">&#34;收到FIN&#34;</span><span class="p">):</span> <span class="s2">&#34;CLOSING&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;FIN_WAIT_2&#34;</span><span class="p">,</span> <span class="s2">&#34;收到FIN&#34;</span><span class="p">):</span> <span class="s2">&#34;TIME_WAIT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;CLOSE_WAIT&#34;</span><span class="p">,</span> <span class="s2">&#34;主动关闭&#34;</span><span class="p">):</span> <span class="s2">&#34;LAST_ACK&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;CLOSING&#34;</span><span class="p">,</span> <span class="s2">&#34;收到ACK&#34;</span><span class="p">):</span> <span class="s2">&#34;TIME_WAIT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;LAST_ACK&#34;</span><span class="p">,</span> <span class="s2">&#34;收到ACK&#34;</span><span class="p">):</span> <span class="s2">&#34;CLOSED&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;TIME_WAIT&#34;</span><span class="p">,</span> <span class="s2">&#34;超时&#34;</span><span class="p">):</span> <span class="s2">&#34;CLOSED&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_next_state</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">current_state</span><span class="p">,</span> <span class="n">event</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取下一个状态&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">transition</span> <span class="o">=</span> <span class="p">(</span><span class="n">current_state</span><span class="p">,</span> <span class="n">event</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">transitions</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">transition</span><span class="p">,</span> <span class="n">current_state</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">simulate_connection_lifecycle</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;模拟连接生命周期&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">lifecycle</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 客户端状态变化</span>
</span></span><span class="line"><span class="cl">        <span class="n">client_states</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;CLOSED&#34;</span><span class="p">,</span> <span class="s2">&#34;主动打开&#34;</span><span class="p">,</span> <span class="s2">&#34;SYN_SENT&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;SYN_SENT&#34;</span><span class="p">,</span> <span class="s2">&#34;收到SYN+ACK&#34;</span><span class="p">,</span> <span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span> <span class="s2">&#34;主动关闭&#34;</span><span class="p">,</span> <span class="s2">&#34;FIN_WAIT_1&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;FIN_WAIT_1&#34;</span><span class="p">,</span> <span class="s2">&#34;收到ACK&#34;</span><span class="p">,</span> <span class="s2">&#34;FIN_WAIT_2&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;FIN_WAIT_2&#34;</span><span class="p">,</span> <span class="s2">&#34;收到FIN&#34;</span><span class="p">,</span> <span class="s2">&#34;TIME_WAIT&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;TIME_WAIT&#34;</span><span class="p">,</span> <span class="s2">&#34;超时&#34;</span><span class="p">,</span> <span class="s2">&#34;CLOSED&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 服务器状态变化</span>
</span></span><span class="line"><span class="cl">        <span class="n">server_states</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;CLOSED&#34;</span><span class="p">,</span> <span class="s2">&#34;被动打开&#34;</span><span class="p">,</span> <span class="s2">&#34;LISTEN&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;LISTEN&#34;</span><span class="p">,</span> <span class="s2">&#34;收到SYN&#34;</span><span class="p">,</span> <span class="s2">&#34;SYN_RCVD&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;SYN_RCVD&#34;</span><span class="p">,</span> <span class="s2">&#34;收到ACK&#34;</span><span class="p">,</span> <span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;ESTABLISHED&#34;</span><span class="p">,</span> <span class="s2">&#34;收到FIN&#34;</span><span class="p">,</span> <span class="s2">&#34;CLOSE_WAIT&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;CLOSE_WAIT&#34;</span><span class="p">,</span> <span class="s2">&#34;主动关闭&#34;</span><span class="p">,</span> <span class="s2">&#34;LAST_ACK&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="p">(</span><span class="s2">&#34;LAST_ACK&#34;</span><span class="p">,</span> <span class="s2">&#34;收到ACK&#34;</span><span class="p">,</span> <span class="s2">&#34;CLOSED&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;客户端状态变化&#34;</span><span class="p">:</span> <span class="n">client_states</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器状态变化&#34;</span><span class="p">:</span> <span class="n">server_states</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 状态机示例</span>
</span></span><span class="line"><span class="cl"><span class="n">state_machine</span> <span class="o">=</span> <span class="n">TCPStateMachine</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">lifecycle</span> <span class="o">=</span> <span class="n">state_machine</span><span class="o">.</span><span class="n">simulate_connection_lifecycle</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;TCP连接生命周期:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">客户端状态变化:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">current</span><span class="p">,</span> <span class="n">event</span><span class="p">,</span> <span class="n">next_state</span> <span class="ow">in</span> <span class="n">lifecycle</span><span class="p">[</span><span class="s2">&#34;客户端状态变化&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  </span><span class="si">{</span><span class="n">current</span><span class="si">}</span><span class="s2"> --[</span><span class="si">{</span><span class="n">event</span><span class="si">}</span><span class="s2">]--&gt; </span><span class="si">{</span><span class="n">next_state</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">服务器状态变化:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">current</span><span class="p">,</span> <span class="n">event</span><span class="p">,</span> <span class="n">next_state</span> <span class="ow">in</span> <span class="n">lifecycle</span><span class="p">[</span><span class="s2">&#34;服务器状态变化&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  </span><span class="si">{</span><span class="n">current</span><span class="si">}</span><span class="s2"> --[</span><span class="si">{</span><span class="n">event</span><span class="si">}</span><span class="s2">]--&gt; </span><span class="si">{</span><span class="n">next_state</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="tcp可靠传输机制">TCP可靠传输机制</h2>
<h3 id="序列号和确认机制">序列号和确认机制</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPReliableTransmission</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP可靠传输机制&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">initial_seq</span><span class="o">=</span><span class="mi">1000</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">seq_num</span> <span class="o">=</span> <span class="n">initial_seq</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">ack_num</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">send_buffer</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">receive_buffer</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span> <span class="o">=</span> <span class="n">initial_seq</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">rtt_samples</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">rto</span> <span class="o">=</span> <span class="mf">1.0</span>  <span class="c1"># 重传超时时间</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">send_data</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">segment_size</span><span class="o">=</span><span class="mi">1024</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;发送数据&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">segments</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="n">data_bytes</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">encode</span><span class="p">()</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="nb">str</span><span class="p">)</span> <span class="k">else</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 分段发送</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">data_bytes</span><span class="p">),</span> <span class="n">segment_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">segment_data</span> <span class="o">=</span> <span class="n">data_bytes</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span> <span class="o">+</span> <span class="n">segment_size</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">segment</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">seq_num</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;数据&#34;</span><span class="p">:</span> <span class="n">segment_data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;长度&#34;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">segment_data</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;发送时间&#34;</span><span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重传次数&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;已确认&#34;</span><span class="p">:</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="n">segments</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">segment</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">send_buffer</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">seq_num</span><span class="p">]</span> <span class="o">=</span> <span class="n">segment</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">seq_num</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">segment_data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">segments</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">receive_data</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">segment</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;接收数据&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">seq_num</span> <span class="o">=</span> <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;序列号&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">data</span> <span class="o">=</span> <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;数据&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">data_len</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查序列号</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">seq_num</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 按序到达</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">receive_buffer</span><span class="p">[</span><span class="n">seq_num</span><span class="p">]</span> <span class="o">=</span> <span class="n">segment</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span> <span class="o">+=</span> <span class="n">data_len</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 检查缓冲区中是否有连续的数据</span>
</span></span><span class="line"><span class="cl">            <span class="k">while</span> <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_buffer</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">next_segment</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_buffer</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">next_segment</span><span class="p">[</span><span class="s2">&#34;数据&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;按序接收&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;接收数据&#34;</span><span class="p">:</span> <span class="n">data</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">)</span> <span class="k">else</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">seq_num</span> <span class="o">&gt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 失序到达，缓存数据</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">receive_buffer</span><span class="p">[</span><span class="n">seq_num</span><span class="p">]</span> <span class="o">=</span> <span class="n">segment</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;失序接收&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span><span class="p">,</span>  <span class="c1"># 发送期望的序列号</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;缓存数据&#34;</span><span class="p">:</span> <span class="n">data</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">)</span> <span class="k">else</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 重复数据</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;重复数据&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">expected_seq</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;丢弃数据&#34;</span><span class="p">:</span> <span class="n">data</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span> <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">data</span><span class="p">,</span> <span class="nb">bytes</span><span class="p">)</span> <span class="k">else</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">process_ack</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ack_num</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;处理确认&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">confirmed_segments</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 确认所有序列号小于ack_num的段</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">seq_num</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">send_buffer</span><span class="o">.</span><span class="n">keys</span><span class="p">()):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">seq_num</span> <span class="o">&lt;</span> <span class="n">ack_num</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">segment</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_buffer</span><span class="p">[</span><span class="n">seq_num</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;已确认&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">                <span class="n">confirmed_segments</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">segment</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                
</span></span><span class="line"><span class="cl">                <span class="c1"># 计算RTT</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="s2">&#34;发送时间&#34;</span> <span class="ow">in</span> <span class="n">segment</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">rtt</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;发送时间&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">rtt_samples</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">rtt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">update_rto</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                
</span></span><span class="line"><span class="cl">                <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_buffer</span><span class="p">[</span><span class="n">seq_num</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;确认的段数&#34;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">confirmed_segments</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;剩余未确认段数&#34;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">send_buffer</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;当前RTO&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">rto</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">update_rto</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;更新重传超时时间&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">rtt_samples</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 简化的RTO计算</span>
</span></span><span class="line"><span class="cl">        <span class="n">avg_rtt</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">rtt_samples</span><span class="p">[</span><span class="o">-</span><span class="mi">10</span><span class="p">:])</span> <span class="o">/</span> <span class="nb">min</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">rtt_samples</span><span class="p">),</span> <span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">rto</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="mf">1.0</span><span class="p">,</span> <span class="n">avg_rtt</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>  <span class="c1"># 简单的RTO算法</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">check_timeout</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;检查超时重传&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">current_time</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">timeout_segments</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">seq_num</span><span class="p">,</span> <span class="n">segment</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_buffer</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="ow">not</span> <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;已确认&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">                <span class="n">elapsed</span> <span class="o">=</span> <span class="n">current_time</span> <span class="o">-</span> <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;发送时间&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">elapsed</span> <span class="o">&gt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">rto</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;重传次数&#34;</span><span class="p">]</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                    <span class="n">segment</span><span class="p">[</span><span class="s2">&#34;发送时间&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">current_time</span>
</span></span><span class="line"><span class="cl">                    <span class="n">timeout_segments</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">segment</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">timeout_segments</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 可靠传输示例</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">sender</span> <span class="o">=</span> <span class="n">TCPReliableTransmission</span><span class="p">(</span><span class="n">initial_seq</span><span class="o">=</span><span class="mi">1000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">receiver</span> <span class="o">=</span> <span class="n">TCPReliableTransmission</span><span class="p">(</span><span class="n">initial_seq</span><span class="o">=</span><span class="mi">1000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 发送数据</span>
</span></span><span class="line"><span class="cl"><span class="n">message</span> <span class="o">=</span> <span class="s2">&#34;Hello, TCP World! This is a test message for reliable transmission.&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">segments</span> <span class="o">=</span> <span class="n">sender</span><span class="o">.</span><span class="n">send_data</span><span class="p">(</span><span class="n">message</span><span class="p">,</span> <span class="n">segment_size</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;发送的数据段:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">segment</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">segments</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;段</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s2">: 序列号=</span><span class="si">{</span><span class="n">segment</span><span class="p">[</span><span class="s1">&#39;序列号&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">, 长度=</span><span class="si">{</span><span class="n">segment</span><span class="p">[</span><span class="s1">&#39;长度&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">, 数据=&#39;</span><span class="si">{</span><span class="n">segment</span><span class="p">[</span><span class="s1">&#39;数据&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">decode</span><span class="p">()</span><span class="si">}</span><span class="s2">&#39;&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">接收过程:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="c1"># 模拟按序接收</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">segment</span> <span class="ow">in</span> <span class="n">segments</span><span class="p">[:</span><span class="mi">3</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">receiver</span><span class="o">.</span><span class="n">receive_data</span><span class="p">(</span><span class="n">segment</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;接收段 </span><span class="si">{</span><span class="n">segment</span><span class="p">[</span><span class="s1">&#39;序列号&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">result</span><span class="p">[</span><span class="s1">&#39;状态&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">, 确认号=</span><span class="si">{</span><span class="n">result</span><span class="p">[</span><span class="s1">&#39;确认号&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 模拟失序接收（跳过一个段）</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">segments</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">receiver</span><span class="o">.</span><span class="n">receive_data</span><span class="p">(</span><span class="n">segments</span><span class="p">[</span><span class="mi">4</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;接收段 </span><span class="si">{</span><span class="n">segments</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="s1">&#39;序列号&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">result</span><span class="p">[</span><span class="s1">&#39;状态&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">, 确认号=</span><span class="si">{</span><span class="n">result</span><span class="p">[</span><span class="s1">&#39;确认号&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 接收缺失的段</span>
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">segments</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">receiver</span><span class="o">.</span><span class="n">receive_data</span><span class="p">(</span><span class="n">segments</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;接收段 </span><span class="si">{</span><span class="n">segments</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="s1">&#39;序列号&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">result</span><span class="p">[</span><span class="s1">&#39;状态&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">, 确认号=</span><span class="si">{</span><span class="n">result</span><span class="p">[</span><span class="s1">&#39;确认号&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="tcp流量控制">TCP流量控制</h2>
<h3 id="滑动窗口机制">滑动窗口机制</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPFlowControl</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP流量控制&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">window_size</span><span class="o">=</span><span class="mi">65535</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">window_size</span> <span class="o">=</span> <span class="n">window_size</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;base&#34;</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>  <span class="c1"># 发送窗口基序号</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;next_seq&#34;</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>  <span class="c1"># 下一个发送序号</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;size&#34;</span><span class="p">:</span> <span class="n">window_size</span><span class="p">,</span>  <span class="c1"># 窗口大小</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;used&#34;</span><span class="p">:</span> <span class="mi">0</span>  <span class="c1"># 已使用窗口大小</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;base&#34;</span><span class="p">:</span> <span class="mi">1000</span><span class="p">,</span>  <span class="c1"># 接收窗口基序号</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;size&#34;</span><span class="p">:</span> <span class="n">window_size</span><span class="p">,</span>  <span class="c1"># 窗口大小</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;available&#34;</span><span class="p">:</span> <span class="n">window_size</span><span class="p">,</span>  <span class="c1"># 可用窗口大小</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;buffer&#34;</span><span class="p">:</span> <span class="p">{}</span>  <span class="c1"># 接收缓冲区</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">can_send</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;检查是否可以发送数据&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">available_window</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;used&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">data_size</span> <span class="o">&lt;=</span> <span class="n">available_window</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">send_segment</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;发送数据段&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">can_send</span><span class="p">(</span><span class="n">data_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;窗口已满&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;可用窗口&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;used&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;请求大小&#34;</span><span class="p">:</span> <span class="n">data_size</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 发送数据</span>
</span></span><span class="line"><span class="cl">        <span class="n">seq_num</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;next_seq&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;next_seq&#34;</span><span class="p">]</span> <span class="o">+=</span> <span class="n">data_size</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;used&#34;</span><span class="p">]</span> <span class="o">+=</span> <span class="n">data_size</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;发送成功&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="n">seq_num</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;数据大小&#34;</span><span class="p">:</span> <span class="n">data_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;剩余窗口&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;used&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">receive_ack</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ack_num</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;接收确认&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">ack_num</span> <span class="o">&gt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 滑动发送窗口</span>
</span></span><span class="line"><span class="cl">            <span class="n">acked_bytes</span> <span class="o">=</span> <span class="n">ack_num</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">ack_num</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;used&#34;</span><span class="p">]</span> <span class="o">-=</span> <span class="n">acked_bytes</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;窗口滑动&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;确认字节数&#34;</span><span class="p">:</span> <span class="n">acked_bytes</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;新窗口基序号&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;可用窗口&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">send_window</span><span class="p">[</span><span class="s2">&#34;used&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;重复确认&#34;</span><span class="p">,</span> <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="n">ack_num</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">receive_segment</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">seq_num</span><span class="p">,</span> <span class="n">data_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;接收数据段&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查是否在接收窗口内</span>
</span></span><span class="line"><span class="cl">        <span class="n">window_end</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">seq_num</span> <span class="o">&lt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;重复数据&#34;</span><span class="p">,</span> <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="n">seq_num</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">seq_num</span> <span class="o">&gt;=</span> <span class="n">window_end</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;超出窗口&#34;</span><span class="p">,</span> <span class="s2">&#34;序列号&#34;</span><span class="p">:</span> <span class="n">seq_num</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 接收数据</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;buffer&#34;</span><span class="p">][</span><span class="n">seq_num</span><span class="p">]</span> <span class="o">=</span> <span class="n">data_size</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查是否可以滑动窗口</span>
</span></span><span class="line"><span class="cl">        <span class="k">while</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;buffer&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="n">data_size</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;buffer&#34;</span><span class="p">][</span><span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">            <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;buffer&#34;</span><span class="p">][</span><span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">]</span> <span class="o">+=</span> <span class="n">data_size</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 更新可用窗口</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;available&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;buffer&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;状态&#34;</span><span class="p">:</span> <span class="s2">&#34;接收成功&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;确认号&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;base&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;窗口大小&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;available&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">update_window_size</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">new_size</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;更新窗口大小&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">old_size</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;size&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">new_size</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;available&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">new_size</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;buffer&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;旧窗口大小&#34;</span><span class="p">:</span> <span class="n">old_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;新窗口大小&#34;</span><span class="p">:</span> <span class="n">new_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;可用窗口&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">receive_window</span><span class="p">[</span><span class="s2">&#34;available&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 流量控制示例</span>
</span></span><span class="line"><span class="cl"><span class="n">flow_control</span> <span class="o">=</span> <span class="n">TCPFlowControl</span><span class="p">(</span><span class="n">window_size</span><span class="o">=</span><span class="mi">1000</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;TCP流量控制示例:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;初始发送窗口: </span><span class="si">{</span><span class="n">flow_control</span><span class="o">.</span><span class="n">send_window</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;初始接收窗口: </span><span class="si">{</span><span class="n">flow_control</span><span class="o">.</span><span class="n">receive_window</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 发送数据</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">发送数据:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">size</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">([</span><span class="mi">300</span><span class="p">,</span> <span class="mi">400</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">150</span><span class="p">],</span> <span class="mi">1</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="n">result</span> <span class="o">=</span> <span class="n">flow_control</span><span class="o">.</span><span class="n">send_segment</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;发送</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">result</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 接收确认</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">接收确认:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">ack_result</span> <span class="o">=</span> <span class="n">flow_control</span><span class="o">.</span><span class="n">receive_ack</span><span class="p">(</span><span class="mi">1700</span><span class="p">)</span>  <span class="c1"># 确认前700字节</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;确认结果: </span><span class="si">{</span><span class="n">ack_result</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 继续发送</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">继续发送:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">flow_control</span><span class="o">.</span><span class="n">send_segment</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;发送结果: </span><span class="si">{</span><span class="n">result</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="tcp拥塞控制">TCP拥塞控制</h2>
<h3 id="拥塞控制算法">拥塞控制算法</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPCongestionControl</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP拥塞控制&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># 拥塞窗口（MSS单位）</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">ssthresh</span> <span class="o">=</span> <span class="mi">64</span>  <span class="c1"># 慢启动阈值</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">mss</span> <span class="o">=</span> <span class="mi">1460</span>  <span class="c1"># 最大段大小</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s2">&#34;slow_start&#34;</span>  <span class="c1"># 拥塞控制状态</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">dup_ack_count</span> <span class="o">=</span> <span class="mi">0</span>  <span class="c1"># 重复ACK计数</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">rtt_samples</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">rto</span> <span class="o">=</span> <span class="mf">1.0</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">algorithms</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Reno&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">reno_algorithm</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Cubic&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">cubic_algorithm</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;BBR&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">bbr_algorithm</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">reno_algorithm</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;TCP Reno算法&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">event</span> <span class="o">==</span> <span class="s2">&#34;ack_received&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">==</span> <span class="s2">&#34;slow_start&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 慢启动：每收到一个ACK，cwnd增加1</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">&gt;=</span> <span class="bp">self</span><span class="o">.</span><span class="n">ssthresh</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s2">&#34;congestion_avoidance&#34;</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">==</span> <span class="s2">&#34;congestion_avoidance&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 拥塞避免：每个RTT，cwnd增加1</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">+=</span> <span class="mf">1.0</span> <span class="o">/</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">dup_ack_count</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">event</span> <span class="o">==</span> <span class="s2">&#34;duplicate_ack&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">dup_ack_count</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">dup_ack_count</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 快速重传</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">ssthresh</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">ssthresh</span> <span class="o">+</span> <span class="mi">3</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s2">&#34;fast_recovery&#34;</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">==</span> <span class="s2">&#34;fast_recovery&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">event</span> <span class="o">==</span> <span class="s2">&#34;timeout&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 超时重传</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">ssthresh</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">/</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s2">&#34;slow_start&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">dup_ack_count</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">event</span> <span class="o">==</span> <span class="s2">&#34;new_ack&#34;</span> <span class="ow">and</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">==</span> <span class="s2">&#34;fast_recovery&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 快速恢复结束</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">ssthresh</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">state</span> <span class="o">=</span> <span class="s2">&#34;congestion_avoidance&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">dup_ack_count</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">cubic_algorithm</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;TCP CUBIC算法（简化版）&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="nb">hasattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">&#39;cubic_state&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;w_max&#39;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;k&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;w_est&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;epoch_start&#39;</span><span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">event</span> <span class="o">==</span> <span class="s2">&#34;ack_received&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">current_time</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">t</span> <span class="o">=</span> <span class="n">current_time</span> <span class="o">-</span> <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;epoch_start&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># CUBIC函数：W(t) = C(t-K)³ + W_max</span>
</span></span><span class="line"><span class="cl">            <span class="n">C</span> <span class="o">=</span> <span class="mf">0.4</span>  <span class="c1"># CUBIC参数</span>
</span></span><span class="line"><span class="cl">            <span class="n">K</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;k&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">W_max</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;w_max&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="n">w_cubic</span> <span class="o">=</span> <span class="n">C</span> <span class="o">*</span> <span class="p">((</span><span class="n">t</span> <span class="o">-</span> <span class="n">K</span><span class="p">)</span> <span class="o">**</span> <span class="mi">3</span><span class="p">)</span> <span class="o">+</span> <span class="n">W_max</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 友好性检查</span>
</span></span><span class="line"><span class="cl">            <span class="n">w_est</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;w_est&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="n">w_est</span> <span class="o">+=</span> <span class="p">(</span><span class="mf">1.0</span> <span class="o">/</span> <span class="n">w_est</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mf">1.0</span> <span class="o">/</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span><span class="p">)</span>  <span class="c1"># Reno-friendly</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">w_cubic</span> <span class="o">&lt;</span> <span class="n">w_est</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="n">w_est</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="n">w_cubic</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;w_est&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">w_est</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">event</span> <span class="o">==</span> <span class="s2">&#34;congestion&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 拥塞事件</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;w_max&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">*</span> <span class="mf">0.7</span>  <span class="c1"># CUBIC的β值</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;k&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;w_max&#39;</span><span class="p">]</span> <span class="o">*</span> <span class="mf">0.3</span> <span class="o">/</span> <span class="mf">0.4</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">cubic_state</span><span class="p">[</span><span class="s1">&#39;epoch_start&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">bbr_algorithm</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">event</span><span class="p">,</span> <span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;BBR算法（简化版）&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="nb">hasattr</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="s1">&#39;bbr_state&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;mode&#39;</span><span class="p">:</span> <span class="s1">&#39;startup&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;pacing_rate&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;bandwidth&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;rtt_min&#39;</span><span class="p">:</span> <span class="nb">float</span><span class="p">(</span><span class="s1">&#39;inf&#39;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="s1">&#39;cycle_index&#39;</span><span class="p">:</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">event</span> <span class="o">==</span> <span class="s2">&#34;ack_received&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">rtt</span> <span class="o">=</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;rtt&#39;</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="n">delivered</span> <span class="o">=</span> <span class="n">kwargs</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;delivered&#39;</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">mss</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 更新带宽估计</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">rtt</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">bw_sample</span> <span class="o">=</span> <span class="n">delivered</span> <span class="o">/</span> <span class="n">rtt</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;bandwidth&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">max</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;bandwidth&#39;</span><span class="p">],</span> <span class="n">bw_sample</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 更新最小RTT</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;rtt_min&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;rtt_min&#39;</span><span class="p">],</span> <span class="n">rtt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 计算BDP（带宽时延积）</span>
</span></span><span class="line"><span class="cl">            <span class="n">bdp</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;bandwidth&#39;</span><span class="p">]</span> <span class="o">*</span> <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;rtt_min&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;mode&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;startup&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 启动阶段：快速探测带宽</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="nb">min</span><span class="p">(</span><span class="mi">2</span> <span class="o">*</span> <span class="n">bdp</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">&gt;</span> <span class="mi">1000</span><span class="p">:</span>  <span class="c1"># 简化的退出条件</span>
</span></span><span class="line"><span class="cl">                    <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;mode&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;drain&#39;</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;mode&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;drain&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 排空阶段</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="n">bdp</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;mode&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;probe_bw&#39;</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;mode&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;probe_bw&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="c1"># 带宽探测阶段</span>
</span></span><span class="line"><span class="cl">                <span class="n">gain_cycle</span> <span class="o">=</span> <span class="p">[</span><span class="mf">1.25</span><span class="p">,</span> <span class="mf">0.75</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">,</span> <span class="mf">1.0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">                <span class="n">gain</span> <span class="o">=</span> <span class="n">gain_cycle</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;cycle_index&#39;</span><span class="p">]]</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span> <span class="o">=</span> <span class="n">gain</span> <span class="o">*</span> <span class="n">bdp</span>
</span></span><span class="line"><span class="cl">                
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;cycle_index&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">bbr_state</span><span class="p">[</span><span class="s1">&#39;cycle_index&#39;</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="nb">len</span><span class="p">(</span><span class="n">gain_cycle</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">simulate_congestion_control</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">algorithm</span><span class="o">=</span><span class="s2">&#34;Reno&#34;</span><span class="p">,</span> <span class="n">events</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;模拟拥塞控制过程&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">events</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">events</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;ack_received&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;ack_received&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;ack_received&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;duplicate_ack&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;duplicate_ack&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;duplicate_ack&#34;</span><span class="p">,</span> <span class="p">{}),</span>  <span class="c1"># 触发快速重传</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;new_ack&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;timeout&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;ack_received&#34;</span><span class="p">,</span> <span class="p">{}),</span>
</span></span><span class="line"><span class="cl">                <span class="p">(</span><span class="s2">&#34;ack_received&#34;</span><span class="p">,</span> <span class="p">{})</span>
</span></span><span class="line"><span class="cl">            <span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">history</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">event</span><span class="p">,</span> <span class="n">params</span> <span class="ow">in</span> <span class="n">events</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">old_cwnd</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span>
</span></span><span class="line"><span class="cl">            <span class="n">old_state</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 执行算法</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">algorithm</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">algorithms</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">algorithms</span><span class="p">[</span><span class="n">algorithm</span><span class="p">](</span><span class="n">event</span><span class="p">,</span> <span class="o">**</span><span class="n">params</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="n">history</span><span class="o">.</span><span class="n">append</span><span class="p">({</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;事件&#34;</span><span class="p">:</span> <span class="n">event</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;旧拥塞窗口&#34;</span><span class="p">:</span> <span class="n">old_cwnd</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;新拥塞窗口&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">cwnd</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;旧状态&#34;</span><span class="p">:</span> <span class="n">old_state</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;新状态&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">state</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;慢启动阈值&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">ssthresh</span>
</span></span><span class="line"><span class="cl">            <span class="p">})</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">history</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 拥塞控制示例</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">congestion_control</span> <span class="o">=</span> <span class="n">TCPCongestionControl</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;TCP拥塞控制示例 (Reno算法):&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">history</span> <span class="o">=</span> <span class="n">congestion_control</span><span class="o">.</span><span class="n">simulate_congestion_control</span><span class="p">(</span><span class="s2">&#34;Reno&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">record</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">history</span><span class="p">,</span> <span class="mi">1</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;步骤</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">record</span><span class="p">[</span><span class="s1">&#39;事件&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  拥塞窗口: </span><span class="si">{</span><span class="n">record</span><span class="p">[</span><span class="s1">&#39;旧拥塞窗口&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">.2f</span><span class="si">}</span><span class="s2"> -&gt; </span><span class="si">{</span><span class="n">record</span><span class="p">[</span><span class="s1">&#39;新拥塞窗口&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">.2f</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  状态: </span><span class="si">{</span><span class="n">record</span><span class="p">[</span><span class="s1">&#39;旧状态&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2"> -&gt; </span><span class="si">{</span><span class="n">record</span><span class="p">[</span><span class="s1">&#39;新状态&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  慢启动阈值: </span><span class="si">{</span><span class="n">record</span><span class="p">[</span><span class="s1">&#39;慢启动阈值&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 比较不同算法</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;不同拥塞控制算法比较:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">algorithms</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;Reno&#34;</span><span class="p">,</span> <span class="s2">&#34;Cubic&#34;</span><span class="p">,</span> <span class="s2">&#34;BBR&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">alg</span> <span class="ow">in</span> <span class="n">algorithms</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">cc</span> <span class="o">=</span> <span class="n">TCPCongestionControl</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">alg</span> <span class="o">==</span> <span class="s2">&#34;BBR&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># BBR需要特殊的事件参数</span>
</span></span><span class="line"><span class="cl">        <span class="n">events</span> <span class="o">=</span> <span class="p">[(</span><span class="s2">&#34;ack_received&#34;</span><span class="p">,</span> <span class="p">{</span><span class="s2">&#34;rtt&#34;</span><span class="p">:</span> <span class="mf">0.1</span><span class="p">,</span> <span class="s2">&#34;delivered&#34;</span><span class="p">:</span> <span class="mi">1460</span><span class="p">})</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">events</span> <span class="o">=</span> <span class="p">[(</span><span class="s2">&#34;ack_received&#34;</span><span class="p">,</span> <span class="p">{})</span> <span class="k">for</span> <span class="n">_</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">history</span> <span class="o">=</span> <span class="n">cc</span><span class="o">.</span><span class="n">simulate_congestion_control</span><span class="p">(</span><span class="n">alg</span><span class="p">,</span> <span class="n">events</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">final_cwnd</span> <span class="o">=</span> <span class="n">history</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="s2">&#34;新拥塞窗口&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">alg</span><span class="si">}</span><span class="s2">: 最终拥塞窗口 = </span><span class="si">{</span><span class="n">final_cwnd</span><span class="si">:</span><span class="s2">.2f</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="tcp性能优化">TCP性能优化</h2>
<h3 id="性能调优技术">性能调优技术</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPPerformanceOptimization</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP性能优化&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">optimization_techniques</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;窗口缩放&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;支持大于64KB的窗口&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;RFC&#34;</span><span class="p">:</span> <span class="s2">&#34;RFC 7323&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;高带宽长延迟网络&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;选择性确认&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;SACK选项，提高重传效率&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;RFC&#34;</span><span class="p">:</span> <span class="s2">&#34;RFC 2018&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;丢包率较高的网络&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;时间戳选项&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;精确RTT测量和PAWS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;RFC&#34;</span><span class="p">:</span> <span class="s2">&#34;RFC 7323&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;需要精确RTT测量&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Nagle算法&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;减少小包发送&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;批量数据传输&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;注意事项&#34;</span><span class="p">:</span> <span class="s2">&#34;可能增加延迟&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;延迟确认&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;合并ACK减少网络流量&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;双向数据流&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;注意事项&#34;</span><span class="p">:</span> <span class="s2">&#34;可能增加RTT&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">calculate_bandwidth_delay_product</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">bandwidth_mbps</span><span class="p">,</span> <span class="n">rtt_ms</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;计算带宽时延积&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">bandwidth_bps</span> <span class="o">=</span> <span class="n">bandwidth_mbps</span> <span class="o">*</span> <span class="mi">1_000_000</span>
</span></span><span class="line"><span class="cl">        <span class="n">rtt_seconds</span> <span class="o">=</span> <span class="n">rtt_ms</span> <span class="o">/</span> <span class="mi">1000</span>
</span></span><span class="line"><span class="cl">        <span class="n">bdp_bytes</span> <span class="o">=</span> <span class="n">bandwidth_bps</span> <span class="o">*</span> <span class="n">rtt_seconds</span> <span class="o">/</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;带宽&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">bandwidth_mbps</span><span class="si">}</span><span class="s2"> Mbps&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;RTT&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">rtt_ms</span><span class="si">}</span><span class="s2"> ms&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;BDP&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">bdp_bytes</span><span class="si">:</span><span class="s2">.0f</span><span class="si">}</span><span class="s2"> bytes&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;建议窗口大小&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">bdp_bytes</span> <span class="o">*</span> <span class="mi">2</span><span class="si">:</span><span class="s2">.0f</span><span class="si">}</span><span class="s2"> bytes&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;需要窗口缩放&#34;</span><span class="p">:</span> <span class="n">bdp_bytes</span> <span class="o">&gt;</span> <span class="mi">65535</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">analyze_tcp_performance</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">throughput_mbps</span><span class="p">,</span> <span class="n">rtt_ms</span><span class="p">,</span> <span class="n">loss_rate</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;分析TCP性能&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># Mathis公式：Throughput ≤ (MSS / RTT) * sqrt(1.5 / p)</span>
</span></span><span class="line"><span class="cl">        <span class="n">mss</span> <span class="o">=</span> <span class="mi">1460</span>  <span class="c1"># 字节</span>
</span></span><span class="line"><span class="cl">        <span class="n">rtt_seconds</span> <span class="o">=</span> <span class="n">rtt_ms</span> <span class="o">/</span> <span class="mi">1000</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">loss_rate</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">theoretical_max</span> <span class="o">=</span> <span class="p">(</span><span class="n">mss</span> <span class="o">/</span> <span class="n">rtt_seconds</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="mf">1.5</span> <span class="o">/</span> <span class="n">loss_rate</span><span class="p">)</span> <span class="o">**</span> <span class="mf">0.5</span> <span class="o">/</span> <span class="mi">1_000_000</span> <span class="o">*</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">theoretical_max</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="s1">&#39;inf&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 窗口限制的吞吐量</span>
</span></span><span class="line"><span class="cl">        <span class="n">window_limited</span> <span class="o">=</span> <span class="p">(</span><span class="mi">65535</span> <span class="o">/</span> <span class="n">rtt_seconds</span><span class="p">)</span> <span class="o">/</span> <span class="mi">1_000_000</span> <span class="o">*</span> <span class="mi">8</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">efficiency</span> <span class="o">=</span> <span class="p">(</span><span class="n">throughput_mbps</span> <span class="o">/</span> <span class="nb">min</span><span class="p">(</span><span class="n">theoretical_max</span><span class="p">,</span> <span class="n">window_limited</span><span class="p">))</span> <span class="o">*</span> <span class="mi">100</span> <span class="k">if</span> <span class="n">theoretical_max</span> <span class="o">!=</span> <span class="nb">float</span><span class="p">(</span><span class="s1">&#39;inf&#39;</span><span class="p">)</span> <span class="k">else</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">analysis</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;实际吞吐量&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">throughput_mbps</span><span class="si">}</span><span class="s2"> Mbps&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;理论最大吞吐量&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">theoretical_max</span><span class="si">:</span><span class="s2">.2f</span><span class="si">}</span><span class="s2"> Mbps&#34;</span> <span class="k">if</span> <span class="n">theoretical_max</span> <span class="o">!=</span> <span class="nb">float</span><span class="p">(</span><span class="s1">&#39;inf&#39;</span><span class="p">)</span> <span class="k">else</span> <span class="s2">&#34;无限制&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;窗口限制吞吐量&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">window_limited</span><span class="si">:</span><span class="s2">.2f</span><span class="si">}</span><span class="s2"> Mbps&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;效率&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">efficiency</span><span class="si">:</span><span class="s2">.1f</span><span class="si">}</span><span class="s2">%&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;性能瓶颈&#34;</span><span class="p">:</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 识别性能瓶颈</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">throughput_mbps</span> <span class="o">&lt;</span> <span class="n">window_limited</span> <span class="o">*</span> <span class="mf">0.8</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">analysis</span><span class="p">[</span><span class="s2">&#34;性能瓶颈&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;可能受拥塞控制限制&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">window_limited</span> <span class="o">&lt;</span> <span class="n">theoretical_max</span> <span class="o">*</span> <span class="mf">0.8</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">analysis</span><span class="p">[</span><span class="s2">&#34;性能瓶颈&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;受接收窗口限制，建议启用窗口缩放&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">loss_rate</span> <span class="o">&gt;</span> <span class="mf">0.01</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">analysis</span><span class="p">[</span><span class="s2">&#34;性能瓶颈&#34;</span><span class="p">]</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;丢包率过高，影响性能&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">analysis</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">recommend_optimizations</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">scenario</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;推荐优化方案&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">recommendations</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;高带宽长延迟&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;启用窗口缩放选项&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用CUBIC或BBR拥塞控制&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;调整接收缓冲区大小&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;考虑使用多连接并行传输&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;高丢包率&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;启用SACK选项&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用更激进的拥塞控制算法&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;考虑使用FEC（前向纠错）&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优化重传策略&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;低延迟要求&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;禁用Nagle算法&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;减少延迟确认时间&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用专用网络路径&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优化应用层协议&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;移动网络&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用BBR拥塞控制&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;启用连接迁移&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;考虑使用MPTCP&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优化重传超时&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;数据中心&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用DCTCP算法&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;启用ECN标记&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优化缓冲区管理&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用RDMA技术&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">recommendations</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">scenario</span><span class="p">,</span> <span class="p">[</span><span class="s2">&#34;请提供具体场景&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 性能优化示例</span>
</span></span><span class="line"><span class="cl"><span class="n">perf_optimizer</span> <span class="o">=</span> <span class="n">TCPPerformanceOptimization</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 计算BDP</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;带宽时延积计算:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">scenarios</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">10</span><span class="p">),</span>   <span class="c1"># 100Mbps, 10ms RTT</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">1000</span><span class="p">,</span> <span class="mi">50</span><span class="p">),</span>  <span class="c1"># 1Gbps, 50ms RTT</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">200</span><span class="p">)</span>    <span class="c1"># 10Mbps, 200ms RTT</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">bandwidth</span><span class="p">,</span> <span class="n">rtt</span> <span class="ow">in</span> <span class="n">scenarios</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">bdp</span> <span class="o">=</span> <span class="n">perf_optimizer</span><span class="o">.</span><span class="n">calculate_bandwidth_delay_product</span><span class="p">(</span><span class="n">bandwidth</span><span class="p">,</span> <span class="n">rtt</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">场景: </span><span class="si">{</span><span class="n">bdp</span><span class="p">[</span><span class="s1">&#39;带宽&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">, </span><span class="si">{</span><span class="n">bdp</span><span class="p">[</span><span class="s1">&#39;RTT&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  BDP: </span><span class="si">{</span><span class="n">bdp</span><span class="p">[</span><span class="s1">&#39;BDP&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  建议窗口: </span><span class="si">{</span><span class="n">bdp</span><span class="p">[</span><span class="s1">&#39;建议窗口大小&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  需要窗口缩放: </span><span class="si">{</span><span class="n">bdp</span><span class="p">[</span><span class="s1">&#39;需要窗口缩放&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 性能分析</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n\n</span><span class="s2">TCP性能分析:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">performance_cases</span> <span class="o">=</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">50</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mf">0.001</span><span class="p">),</span>    <span class="c1"># 50Mbps实际，10ms RTT，0.1%丢包</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">800</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mf">0.01</span><span class="p">),</span>    <span class="c1"># 800Mbps实际，50ms RTT，1%丢包</span>
</span></span><span class="line"><span class="cl">    <span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mf">0.05</span><span class="p">)</span>      <span class="c1"># 5Mbps实际，200ms RTT，5%丢包</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">throughput</span><span class="p">,</span> <span class="n">rtt</span><span class="p">,</span> <span class="n">loss</span> <span class="ow">in</span> <span class="n">performance_cases</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">analysis</span> <span class="o">=</span> <span class="n">perf_optimizer</span><span class="o">.</span><span class="n">analyze_tcp_performance</span><span class="p">(</span><span class="n">throughput</span><span class="p">,</span> <span class="n">rtt</span><span class="p">,</span> <span class="n">loss</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">场景: </span><span class="si">{</span><span class="n">throughput</span><span class="si">}</span><span class="s2">Mbps, </span><span class="si">{</span><span class="n">rtt</span><span class="si">}</span><span class="s2">ms RTT, </span><span class="si">{</span><span class="n">loss</span><span class="o">*</span><span class="mi">100</span><span class="si">}</span><span class="s2">%丢包&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  实际吞吐量: </span><span class="si">{</span><span class="n">analysis</span><span class="p">[</span><span class="s1">&#39;实际吞吐量&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  理论最大: </span><span class="si">{</span><span class="n">analysis</span><span class="p">[</span><span class="s1">&#39;理论最大吞吐量&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  效率: </span><span class="si">{</span><span class="n">analysis</span><span class="p">[</span><span class="s1">&#39;效率&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">analysis</span><span class="p">[</span><span class="s1">&#39;性能瓶颈&#39;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  瓶颈: </span><span class="si">{</span><span class="s1">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">analysis</span><span class="p">[</span><span class="s1">&#39;性能瓶颈&#39;</span><span class="p">])</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 优化建议</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n\n</span><span class="s2">优化建议:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">scenarios</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;高带宽长延迟&#34;</span><span class="p">,</span> <span class="s2">&#34;高丢包率&#34;</span><span class="p">,</span> <span class="s2">&#34;低延迟要求&#34;</span><span class="p">,</span> <span class="s2">&#34;移动网络&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">scenario</span> <span class="ow">in</span> <span class="n">scenarios</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">recommendations</span> <span class="o">=</span> <span class="n">perf_optimizer</span><span class="o">.</span><span class="n">recommend_optimizations</span><span class="p">(</span><span class="n">scenario</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="se">\n</span><span class="si">{</span><span class="n">scenario</span><span class="si">}</span><span class="s2">场景:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">rec</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">recommendations</span><span class="p">,</span> <span class="mi">1</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">. </span><span class="si">{</span><span class="n">rec</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="tcp在现代网络中的应用">TCP在现代网络中的应用</h2>
<h3 id="tcp变种和扩展">TCP变种和扩展</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">ModernTCPVariants</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;现代TCP变种&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">variants</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP Reno&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">1990</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;快速重传&#34;</span><span class="p">,</span> <span class="s2">&#34;快速恢复&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;传统网络环境&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;简单可靠，但在高BDP网络中性能不佳&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP NewReno&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">1999</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;改进的快速恢复&#34;</span><span class="p">,</span> <span class="s2">&#34;部分确认处理&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;多丢包环境&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;改善了多丢包处理，但仍有限制&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP SACK&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">1996</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;选择性确认&#34;</span><span class="p">,</span> <span class="s2">&#34;精确重传&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;丢包率较高的网络&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;提高重传效率，但增加复杂性&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP Vegas&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">1994</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;基于延迟的拥塞控制&#34;</span><span class="p">,</span> <span class="s2">&#34;主动避免拥塞&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;延迟敏感应用&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;低延迟，但与其他算法共存困难&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP CUBIC&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">2008</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;三次函数增长&#34;</span><span class="p">,</span> <span class="s2">&#34;RTT无关&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;高速长距离网络&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;高带宽利用率，Linux默认算法&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP BBR&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">2016</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;基于带宽和RTT&#34;</span><span class="p">,</span> <span class="s2">&#34;模型驱动&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;各种网络环境&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;优秀的性能，但可能过于激进&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;MPTCP&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">2013</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;多路径传输&#34;</span><span class="p">,</span> <span class="s2">&#34;连接聚合&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;移动设备、数据中心&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;提高吞吐量和可靠性，但复杂度高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;QUIC&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;年份&#34;</span><span class="p">:</span> <span class="mi">2021</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;基于UDP&#34;</span><span class="p">,</span> <span class="s2">&#34;内置加密&#34;</span><span class="p">,</span> <span class="s2">&#34;0-RTT&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;适用场景&#34;</span><span class="p">:</span> <span class="s2">&#34;Web应用、实时通信&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优缺点&#34;</span><span class="p">:</span> <span class="s2">&#34;低延迟，但需要新的基础设施&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">compare_algorithms</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">metrics</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;比较不同算法&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">metrics</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">metrics</span> <span class="o">=</span> <span class="p">[</span><span class="s2">&#34;吞吐量&#34;</span><span class="p">,</span> <span class="s2">&#34;延迟&#34;</span><span class="p">,</span> <span class="s2">&#34;公平性&#34;</span><span class="p">,</span> <span class="s2">&#34;复杂度&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">comparison</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP Reno&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;吞吐量&#34;</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="s2">&#34;延迟&#34;</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="s2">&#34;公平性&#34;</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="s2">&#34;复杂度&#34;</span><span class="p">:</span> <span class="mi">3</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP CUBIC&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;吞吐量&#34;</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span> <span class="s2">&#34;延迟&#34;</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="s2">&#34;公平性&#34;</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="s2">&#34;复杂度&#34;</span><span class="p">:</span> <span class="mi">5</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP BBR&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;吞吐量&#34;</span><span class="p">:</span> <span class="mi">9</span><span class="p">,</span> <span class="s2">&#34;延迟&#34;</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="s2">&#34;公平性&#34;</span><span class="p">:</span> <span class="mi">6</span><span class="p">,</span> <span class="s2">&#34;复杂度&#34;</span><span class="p">:</span> <span class="mi">7</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;MPTCP&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;吞吐量&#34;</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s2">&#34;延迟&#34;</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="s2">&#34;公平性&#34;</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="s2">&#34;复杂度&#34;</span><span class="p">:</span> <span class="mi">9</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;QUIC&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;吞吐量&#34;</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span> <span class="s2">&#34;延迟&#34;</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span> <span class="s2">&#34;公平性&#34;</span><span class="p">:</span> <span class="mi">7</span><span class="p">,</span> <span class="s2">&#34;复杂度&#34;</span><span class="p">:</span> <span class="mi">8</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">comparison</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_deployment_status</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取部署状态&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP Reno/NewReno&#34;</span><span class="p">:</span> <span class="s2">&#34;广泛部署，传统系统默认&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP CUBIC&#34;</span><span class="p">:</span> <span class="s2">&#34;Linux默认，广泛使用&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP BBR&#34;</span><span class="p">:</span> <span class="s2">&#34;Google服务大规模部署，逐渐普及&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;MPTCP&#34;</span><span class="p">:</span> <span class="s2">&#34;移动运营商和数据中心试点&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;QUIC&#34;</span><span class="p">:</span> <span class="s2">&#34;HTTP/3标准，主要浏览器支持&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># TCP安全考虑</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">TCPSecurity</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;TCP安全机制&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">security_issues</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;TCP劫持&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;攻击者伪造TCP段接管连接&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护措施&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;序列号随机化&#34;</span><span class="p">,</span> <span class="s2">&#34;使用TLS&#34;</span><span class="p">,</span> <span class="s2">&#34;网络分段&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;SYN洪水攻击&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;大量SYN请求耗尽服务器资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护措施&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;SYN Cookies&#34;</span><span class="p">,</span> <span class="s2">&#34;连接限制&#34;</span><span class="p">,</span> <span class="s2">&#34;防火墙过滤&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;RST攻击&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;伪造RST段强制关闭连接&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护措施&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;序列号验证&#34;</span><span class="p">,</span> <span class="s2">&#34;使用TLS&#34;</span><span class="p">,</span> <span class="s2">&#34;网络监控&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;窗口攻击&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;描述&#34;</span><span class="p">:</span> <span class="s2">&#34;操纵接收窗口影响性能&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护措施&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;窗口大小限制&#34;</span><span class="p">,</span> <span class="s2">&#34;流量监控&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">implement_syn_cookies</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">client_ip</span><span class="p">,</span> <span class="n">client_port</span><span class="p">,</span> <span class="n">server_port</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;实现SYN Cookies（简化版）&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">import</span> <span class="nn">hashlib</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 简化的SYN Cookie生成</span>
</span></span><span class="line"><span class="cl">        <span class="n">secret_key</span> <span class="o">=</span> <span class="s2">&#34;tcp_secret_key_2024&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">timestamp</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">())</span> <span class="o">//</span> <span class="mi">64</span>  <span class="c1"># 64秒时间窗口</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 构造Cookie</span>
</span></span><span class="line"><span class="cl">        <span class="n">cookie_data</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">client_ip</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">client_port</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">server_port</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">timestamp</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">secret_key</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">cookie_hash</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">(</span><span class="n">cookie_data</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 取前24位作为序列号</span>
</span></span><span class="line"><span class="cl">        <span class="n">syn_cookie</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">cookie_hash</span><span class="p">[:</span><span class="mi">6</span><span class="p">],</span> <span class="mi">16</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;SYN_Cookie&#34;</span><span class="p">:</span> <span class="n">syn_cookie</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;时间戳&#34;</span><span class="p">:</span> <span class="n">timestamp</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;有效期&#34;</span><span class="p">:</span> <span class="s2">&#34;64秒&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;验证方法&#34;</span><span class="p">:</span> <span class="s2">&#34;重新计算并比较&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">validate_syn_cookie</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">client_ip</span><span class="p">,</span> <span class="n">client_port</span><span class="p">,</span> <span class="n">server_port</span><span class="p">,</span> <span class="n">received_ack</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;验证SYN Cookie&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="kn">import</span> <span class="nn">hashlib</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">secret_key</span> <span class="o">=</span> <span class="s2">&#34;tcp_secret_key_2024&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">current_time</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">())</span> <span class="o">//</span> <span class="mi">64</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查当前和前一个时间窗口</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">timestamp</span> <span class="ow">in</span> <span class="p">[</span><span class="n">current_time</span><span class="p">,</span> <span class="n">current_time</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="n">cookie_data</span> <span class="o">=</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">client_ip</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">client_port</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">server_port</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">timestamp</span><span class="si">}</span><span class="s2">:</span><span class="si">{</span><span class="n">secret_key</span><span class="si">}</span><span class="s2">&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="n">cookie_hash</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">(</span><span class="n">cookie_data</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="n">expected_cookie</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">cookie_hash</span><span class="p">[:</span><span class="mi">6</span><span class="p">],</span> <span class="mi">16</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">received_ack</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">==</span> <span class="n">expected_cookie</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;验证结果&#34;</span><span class="p">:</span> <span class="s2">&#34;成功&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;时间戳&#34;</span><span class="p">:</span> <span class="n">timestamp</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;Cookie&#34;</span><span class="p">:</span> <span class="n">expected_cookie</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;验证结果&#34;</span><span class="p">:</span> <span class="s2">&#34;失败&#34;</span><span class="p">,</span> <span class="s2">&#34;原因&#34;</span><span class="p">:</span> <span class="s2">&#34;Cookie无效或过期&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;现代TCP变种比较:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">variants</span> <span class="o">=</span> <span class="n">ModernTCPVariants</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">comparison</span> <span class="o">=</span> <span class="n">variants</span><span class="o">.</span><span class="n">compare_algorithms</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">算法性能对比 (1-10分):&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="s1">&#39;算法&#39;</span><span class="si">:</span><span class="s2">&lt;12</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="s1">&#39;吞吐量&#39;</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="s1">&#39;延迟&#39;</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="s1">&#39;公平性&#39;</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="s1">&#39;复杂度&#39;</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;-&#34;</span> <span class="o">*</span> <span class="mi">50</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">alg</span><span class="p">,</span> <span class="n">scores</span> <span class="ow">in</span> <span class="n">comparison</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="n">alg</span><span class="si">:</span><span class="s2">&lt;12</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="n">scores</span><span class="p">[</span><span class="s1">&#39;吞吐量&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="n">scores</span><span class="p">[</span><span class="s1">&#39;延迟&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="n">scores</span><span class="p">[</span><span class="s1">&#39;公平性&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2"> </span><span class="si">{</span><span class="n">scores</span><span class="p">[</span><span class="s1">&#39;复杂度&#39;</span><span class="p">]</span><span class="si">:</span><span class="s2">&lt;8</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">部署状态:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">deployment</span> <span class="o">=</span> <span class="n">variants</span><span class="o">.</span><span class="n">get_deployment_status</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">alg</span><span class="p">,</span> <span class="n">status</span> <span class="ow">in</span> <span class="n">deployment</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  </span><span class="si">{</span><span class="n">alg</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">status</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># TCP安全示例</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;</span><span class="se">\n\n</span><span class="s2">TCP安全机制:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">security</span> <span class="o">=</span> <span class="n">TCPSecurity</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># SYN Cookies示例</span>
</span></span><span class="line"><span class="cl"><span class="n">cookie_result</span> <span class="o">=</span> <span class="n">security</span><span class="o">.</span><span class="n">implement_syn_cookies</span><span class="p">(</span><span class="s2">&#34;192.168.1.100&#34;</span><span class="p">,</span> <span class="mi">12345</span><span class="p">,</span> <span class="mi">80</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;SYN Cookie生成: </span><span class="si">{</span><span class="n">cookie_result</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">validation_result</span> <span class="o">=</span> <span class="n">security</span><span class="o">.</span><span class="n">validate_syn_cookie</span><span class="p">(</span><span class="s2">&#34;192.168.1.100&#34;</span><span class="p">,</span> <span class="mi">12345</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="n">cookie_result</span><span class="p">[</span><span class="s2">&#34;SYN_Cookie&#34;</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;Cookie验证: </span><span class="si">{</span><span class="n">validation_result</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="学习建议和总结">学习建议和总结</h2>
<h3 id="tcp学习路径">TCP学习路径</h3>
<ol>
<li><strong>基础概念</strong>：理解TCP的基本特性和工作原理</li>
<li><strong>协议细节</strong>：掌握报文格式、状态机、连接管理</li>
<li><strong>可靠传输</strong>：学习序列号、确认、重传机制</li>
<li><strong>流量控制</strong>：理解滑动窗口机制</li>
<li><strong>拥塞控制</strong>：掌握各种拥塞控制算法</li>
<li><strong>性能优化</strong>：学习TCP调优技术</li>
<li><strong>现代发展</strong>：了解新的TCP变种和替代方案</li>
</ol>
<h3 id="关键要点总结">关键要点总结</h3>
<table>
  <thead>
      <tr>
          <th>机制</th>
          <th>目的</th>
          <th>实现方式</th>
          <th>重要性</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>三次握手</strong></td>
          <td>建立可靠连接</td>
          <td>SYN → SYN+ACK → ACK</td>
          <td>基础</td>
      </tr>
      <tr>
          <td><strong>序列号</strong></td>
          <td>保证数据顺序</td>
          <td>32位序列号空间</td>
          <td>核心</td>
      </tr>
      <tr>
          <td><strong>确认机制</strong></td>
          <td>确保数据到达</td>
          <td>累积确认 + 选择确认</td>
          <td>核心</td>
      </tr>
      <tr>
          <td><strong>流量控制</strong></td>
          <td>防止接收方溢出</td>
          <td>滑动窗口</td>
          <td>重要</td>
      </tr>
      <tr>
          <td><strong>拥塞控制</strong></td>
          <td>避免网络拥塞</td>
          <td>慢启动 + 拥塞避免</td>
          <td>关键</td>
      </tr>
  </tbody>
</table>
<h3 id="实际应用建议">实际应用建议</h3>
<ul>
<li><strong>服务器配置</strong>：合理设置TCP参数，如窗口大小、超时时间</li>
<li><strong>应用设计</strong>：考虑TCP的特性，合理使用连接</li>
<li><strong>网络监控</strong>：监控TCP连接状态和性能指标</li>
<li><strong>安全防护</strong>：实施适当的安全措施防范TCP攻击</li>
<li><strong>性能调优</strong>：根据网络环境选择合适的拥塞控制算法</li>
</ul>
<h3 id="未来发展趋势">未来发展趋势</h3>
<ul>
<li><strong>QUIC协议</strong>：基于UDP的可靠传输，HTTP/3的基础</li>
<li><strong>多路径TCP</strong>：利用多个网络路径提高性能</li>
<li><strong>机器学习</strong>：智能拥塞控制和参数调优</li>
<li><strong>硬件加速</strong>：网卡和交换机的TCP处理加速</li>
<li><strong>云原生优化</strong>：针对容器和微服务的TCP优化</li>
</ul>
<p>TCP协议作为互联网的基石，其深入理解对于网络编程、系统设计和性能优化都至关重要。随着网络技术的发展，TCP也在不断演进，学习其原理和最新发展趋势将有助于构建更高效、更可靠的网络应用。</p>
]]></content:encoded>
    </item>
    <item>
      <title>HTTP协议详解：从基础到高级应用</title>
      <link>http://localhost:1313/posts/http-protocol-guide/</link>
      <pubDate>Wed, 28 Feb 2024 10:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/http-protocol-guide/</guid>
      <description>深入解析HTTP协议的工作原理、请求响应机制、状态码、缓存策略、安全机制以及HTTP/2和HTTP/3的新特性，涵盖Web开发中的实际应用</description>
      <content:encoded><![CDATA[<h2 id="http协议概述">HTTP协议概述</h2>
<p>**HTTP（HyperText Transfer Protocol）**是互联网上应用最广泛的网络协议之一，是Web的基础。它定义了客户端和服务器之间如何进行通信，是一个基于请求-响应模式的、无状态的应用层协议。</p>
<h3 id="http的核心特点">HTTP的核心特点</h3>
<table>
  <thead>
      <tr>
          <th>特点</th>
          <th>描述</th>
          <th>影响</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>无状态</strong></td>
          <td>每个请求都是独立的</td>
          <td>需要额外机制保持状态</td>
      </tr>
      <tr>
          <td><strong>无连接</strong></td>
          <td>请求完成后断开连接</td>
          <td>HTTP/1.1引入持久连接</td>
      </tr>
      <tr>
          <td><strong>简单快速</strong></td>
          <td>协议简单，处理速度快</td>
          <td>易于实现和调试</td>
      </tr>
      <tr>
          <td><strong>灵活</strong></td>
          <td>支持多种数据类型</td>
          <td>可传输任意类型数据</td>
      </tr>
  </tbody>
</table>
<h2 id="http协议版本演进">HTTP协议版本演进</h2>
<h3 id="http10-vs-http11-vs-http2-vs-http3">HTTP/1.0 vs HTTP/1.1 vs HTTP/2 vs HTTP/3</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="c1"># HTTP版本特性对比</span>
</span></span><span class="line"><span class="cl"><span class="n">http_versions</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;HTTP/1.0&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;发布年份&#34;</span><span class="p">:</span> <span class="mi">1996</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;主要特性&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;基本的请求-响应机制&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;支持GET、POST、HEAD方法&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;每个请求建立新连接&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;缺点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;连接开销大&#34;</span><span class="p">,</span> <span class="s2">&#34;无法复用连接&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;HTTP/1.1&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;发布年份&#34;</span><span class="p">:</span> <span class="mi">1997</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;主要特性&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;持久连接（Keep-Alive）&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;管道化（Pipelining）&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;分块传输编码&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Host头字段&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;更多HTTP方法&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;改进&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;减少连接开销&#34;</span><span class="p">,</span> <span class="s2">&#34;支持虚拟主机&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;HTTP/2&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;发布年份&#34;</span><span class="p">:</span> <span class="mi">2015</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;主要特性&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;二进制分帧&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;多路复用&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;头部压缩（HPACK）&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;服务器推送&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;流优先级&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;性能提升&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;解决队头阻塞&#34;</span><span class="p">,</span> <span class="s2">&#34;减少延迟&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;HTTP/3&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;发布年份&#34;</span><span class="p">:</span> <span class="mi">2022</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;主要特性&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;基于QUIC协议&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;UDP传输&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;内置加密&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;连接迁移&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;0-RTT连接建立&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;优势&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;更快的连接建立&#34;</span><span class="p">,</span> <span class="s2">&#34;更好的移动网络支持&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">version</span><span class="p">,</span> <span class="n">details</span> <span class="ow">in</span> <span class="n">http_versions</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="se">\n</span><span class="si">{</span><span class="n">version</span><span class="si">}</span><span class="s2"> (</span><span class="si">{</span><span class="n">details</span><span class="p">[</span><span class="s1">&#39;发布年份&#39;</span><span class="p">]</span><span class="si">}</span><span class="s2">年):&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">feature</span> <span class="ow">in</span> <span class="n">details</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;主要特性&#39;</span><span class="p">,</span> <span class="p">[]):</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  • </span><span class="si">{</span><span class="n">feature</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="http请求和响应结构">HTTP请求和响应结构</h2>
<h3 id="http请求结构">HTTP请求结构</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="nf">GET</span> <span class="nn">/api/users/123</span> <span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span>
</span></span><span class="line"><span class="cl"><span class="n">Host</span><span class="o">:</span> <span class="l">api.example.com</span>
</span></span><span class="line"><span class="cl"><span class="n">User-Agent</span><span class="o">:</span> <span class="l">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36</span>
</span></span><span class="line"><span class="cl"><span class="n">Accept</span><span class="o">:</span> <span class="l">application/json</span>
</span></span><span class="line"><span class="cl"><span class="n">Authorization</span><span class="o">:</span> <span class="l">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/json</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">85</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;zhangsan@example.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="请求结构解析">请求结构解析</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPRequest</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP请求结构解析&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">raw_request</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">raw_request</span> <span class="o">=</span> <span class="n">raw_request</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">parse_request</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">parse_request</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;解析HTTP请求&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">lines</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">raw_request</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 解析请求行</span>
</span></span><span class="line"><span class="cl">        <span class="n">request_line</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">method</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">path</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">version</span> <span class="o">=</span> <span class="n">request_line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 解析请求头</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">headers</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="n">body_start</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">line</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">lines</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="mi">1</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">body_start</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="s1">&#39;:&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 解析请求体</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">body_start</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">lines</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">body</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">lines</span><span class="p">[</span><span class="n">body_start</span><span class="p">:])</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">body</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_info</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取请求信息&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;method&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">method</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;path&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">path</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;version&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">version</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;headers&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;body&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">body</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="n">sample_request</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;GET /api/users HTTP/1.1
</span></span></span><span class="line"><span class="cl"><span class="s2">Host: api.example.com
</span></span></span><span class="line"><span class="cl"><span class="s2">User-Agent: Mozilla/5.0
</span></span></span><span class="line"><span class="cl"><span class="s2">Accept: application/json
</span></span></span><span class="line"><span class="cl"><span class="s2">
</span></span></span><span class="line"><span class="cl"><span class="s2">&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">request</span> <span class="o">=</span> <span class="n">HTTPRequest</span><span class="p">(</span><span class="n">sample_request</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;请求信息:&#34;</span><span class="p">,</span> <span class="n">request</span><span class="o">.</span><span class="n">get_info</span><span class="p">())</span>
</span></span></code></pre></div><h3 id="http响应结构">HTTP响应结构</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-http" data-lang="http"><span class="line"><span class="cl"><span class="kr">HTTP</span><span class="o">/</span><span class="m">1.1</span> <span class="m">200</span> <span class="ne">OK</span>
</span></span><span class="line"><span class="cl"><span class="n">Date</span><span class="o">:</span> <span class="l">Mon, 27 Feb 2024 10:15:30 GMT</span>
</span></span><span class="line"><span class="cl"><span class="n">Server</span><span class="o">:</span> <span class="l">nginx/1.18.0</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Type</span><span class="o">:</span> <span class="l">application/json; charset=utf-8</span>
</span></span><span class="line"><span class="cl"><span class="n">Content-Length</span><span class="o">:</span> <span class="l">156</span>
</span></span><span class="line"><span class="cl"><span class="n">Cache-Control</span><span class="o">:</span> <span class="l">max-age=3600</span>
</span></span><span class="line"><span class="cl"><span class="n">ETag</span><span class="o">:</span> <span class="l">&#34;33a64df551425fcc55e4d42a148795d9f25f89d4&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">Access-Control-Allow-Origin</span><span class="o">:</span> <span class="l">*</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="mi">123</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;zhangsan@example.com&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;created_at&#34;</span><span class="p">:</span> <span class="s2">&#34;2024-02-27T10:15:30Z&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;active&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h4 id="响应结构解析">响应结构解析</h4>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPResponse</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP响应结构解析&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">raw_response</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">raw_response</span> <span class="o">=</span> <span class="n">raw_response</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">parse_response</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">parse_response</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;解析HTTP响应&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">lines</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">raw_response</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 解析状态行</span>
</span></span><span class="line"><span class="cl">        <span class="n">status_line</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="n">parts</span> <span class="o">=</span> <span class="n">status_line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">version</span> <span class="o">=</span> <span class="n">parts</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">status_code</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">parts</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">reason_phrase</span> <span class="o">=</span> <span class="n">parts</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">parts</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">2</span> <span class="k">else</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 解析响应头</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">headers</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="n">body_start</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">line</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">lines</span><span class="p">[</span><span class="mi">1</span><span class="p">:],</span> <span class="mi">1</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">line</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">body_start</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="k">break</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="s1">&#39;:&#39;</span> <span class="ow">in</span> <span class="n">line</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 解析响应体</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">body_start</span> <span class="o">&lt;</span> <span class="nb">len</span><span class="p">(</span><span class="n">lines</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">body</span> <span class="o">=</span> <span class="s1">&#39;</span><span class="se">\n</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">lines</span><span class="p">[</span><span class="n">body_start</span><span class="p">:])</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">body</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">is_success</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;判断是否成功响应&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="mi">200</span> <span class="o">&lt;=</span> <span class="bp">self</span><span class="o">.</span><span class="n">status_code</span> <span class="o">&lt;</span> <span class="mi">300</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_info</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取响应信息&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;version&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">version</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;status_code&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">status_code</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;reason_phrase&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">reason_phrase</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;headers&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;body&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">body</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;is_success&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_success</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span></code></pre></div><h2 id="http方法详解">HTTP方法详解</h2>
<h3 id="常用http方法">常用HTTP方法</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPMethods</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP方法详解和示例&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nd">@staticmethod</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_method_info</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取HTTP方法信息&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">methods</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;GET&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;获取资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;安全&#34;</span><span class="p">,</span> <span class="s2">&#34;幂等&#34;</span><span class="p">,</span> <span class="s2">&#34;可缓存&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;GET /api/users/123&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;POST&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;创建资源或提交数据&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;不安全&#34;</span><span class="p">,</span> <span class="s2">&#34;非幂等&#34;</span><span class="p">,</span> <span class="s2">&#34;不可缓存&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;POST /api/users&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;PUT&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;更新或创建资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;不安全&#34;</span><span class="p">,</span> <span class="s2">&#34;幂等&#34;</span><span class="p">,</span> <span class="s2">&#34;不可缓存&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;PUT /api/users/123&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;DELETE&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;删除资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;不安全&#34;</span><span class="p">,</span> <span class="s2">&#34;幂等&#34;</span><span class="p">,</span> <span class="s2">&#34;不可缓存&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;DELETE /api/users/123&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;PATCH&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;部分更新资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;不安全&#34;</span><span class="p">,</span> <span class="s2">&#34;非幂等&#34;</span><span class="p">,</span> <span class="s2">&#34;不可缓存&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;PATCH /api/users/123&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HEAD&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;获取资源头信息&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;安全&#34;</span><span class="p">,</span> <span class="s2">&#34;幂等&#34;</span><span class="p">,</span> <span class="s2">&#34;可缓存&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;HEAD /api/users/123&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;OPTIONS&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;获取服务器支持的方法&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;特点&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;安全&#34;</span><span class="p">,</span> <span class="s2">&#34;幂等&#34;</span><span class="p">,</span> <span class="s2">&#34;不可缓存&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;OPTIONS /api/users&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">methods</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># RESTful API设计示例</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">RESTfulAPI</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;RESTful API设计示例&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">users</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">next_id</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">handle_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;处理HTTP请求&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">path</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;/api/users&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;GET&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">path</span> <span class="o">==</span> <span class="s1">&#39;/api/users&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_users</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">                <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">user_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">extract_id</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                    <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_user</span><span class="p">(</span><span class="n">user_id</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;POST&#39;</span> <span class="ow">and</span> <span class="n">path</span> <span class="o">==</span> <span class="s1">&#39;/api/users&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">create_user</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;PUT&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">user_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">extract_id</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">update_user</span><span class="p">(</span><span class="n">user_id</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;DELETE&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">user_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">extract_id</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">delete_user</span><span class="p">(</span><span class="n">user_id</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="k">elif</span> <span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;PATCH&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">user_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">extract_id</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">patch_user</span><span class="p">(</span><span class="n">user_id</span><span class="p">,</span> <span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;error&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Found&#34;</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">404</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">extract_id</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;从路径中提取ID&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">parts</span> <span class="o">=</span> <span class="n">path</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nb">int</span><span class="p">(</span><span class="n">parts</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="k">if</span> <span class="n">parts</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">isdigit</span><span class="p">()</span> <span class="k">else</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_users</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取所有用户&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;users&#34;</span><span class="p">:</span> <span class="nb">list</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">values</span><span class="p">()),</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">200</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_user</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">user_id</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取单个用户&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">user_id</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;user&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">[</span><span class="n">user_id</span><span class="p">],</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">200</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;error&#34;</span><span class="p">:</span> <span class="s2">&#34;User not found&#34;</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">404</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">create_user</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;创建用户&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">user_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">next_id</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">next_id</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">user</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="n">user_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="n">data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;name&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;email&#34;</span><span class="p">:</span> <span class="n">data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;email&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;created_at&#34;</span><span class="p">:</span> <span class="s2">&#34;2024-02-27T10:15:30Z&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">[</span><span class="n">user_id</span><span class="p">]</span> <span class="o">=</span> <span class="n">user</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;user&#34;</span><span class="p">:</span> <span class="n">user</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">201</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">update_user</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">user_id</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;更新用户（完整替换）&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">user</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="n">user_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="n">data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;name&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;email&#34;</span><span class="p">:</span> <span class="n">data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;email&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;updated_at&#34;</span><span class="p">:</span> <span class="s2">&#34;2024-02-27T10:15:30Z&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">[</span><span class="n">user_id</span><span class="p">]</span> <span class="o">=</span> <span class="n">user</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;user&#34;</span><span class="p">:</span> <span class="n">user</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">200</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">patch_user</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">user_id</span><span class="p">,</span> <span class="n">data</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;部分更新用户&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">user_id</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;error&#34;</span><span class="p">:</span> <span class="s2">&#34;User not found&#34;</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">404</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">user</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">[</span><span class="n">user_id</span><span class="p">]</span><span class="o">.</span><span class="n">copy</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">user</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">user</span><span class="p">[</span><span class="s2">&#34;updated_at&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&#34;2024-02-27T10:15:30Z&#34;</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">[</span><span class="n">user_id</span><span class="p">]</span> <span class="o">=</span> <span class="n">user</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;user&#34;</span><span class="p">:</span> <span class="n">user</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">200</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">delete_user</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">user_id</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;删除用户&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">user_id</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">del</span> <span class="bp">self</span><span class="o">.</span><span class="n">users</span><span class="p">[</span><span class="n">user_id</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;message&#34;</span><span class="p">:</span> <span class="s2">&#34;User deleted&#34;</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">204</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;error&#34;</span><span class="p">:</span> <span class="s2">&#34;User not found&#34;</span><span class="p">,</span> <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="mi">404</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="n">api</span> <span class="o">=</span> <span class="n">RESTfulAPI</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 创建用户</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">handle_request</span><span class="p">(</span><span class="s1">&#39;POST&#39;</span><span class="p">,</span> <span class="s1">&#39;/api/users&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;zhangsan@example.com&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;创建用户:&#34;</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 获取用户</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">handle_request</span><span class="p">(</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;/api/users/1&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;获取用户:&#34;</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 更新用户</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">handle_request</span><span class="p">(</span><span class="s1">&#39;PATCH&#39;</span><span class="p">,</span> <span class="s1">&#39;/api/users/1&#39;</span><span class="p">,</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三丰&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">})</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;更新用户:&#34;</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="http状态码详解">HTTP状态码详解</h2>
<h3 id="状态码分类和含义">状态码分类和含义</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPStatusCodes</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP状态码详解&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">status_codes</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="c1"># 1xx 信息性状态码</span>
</span></span><span class="line"><span class="cl">            <span class="mi">100</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Continue&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;继续请求&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">101</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Switching Protocols&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;切换协议&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">102</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Processing&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;处理中&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 2xx 成功状态码</span>
</span></span><span class="line"><span class="cl">            <span class="mi">200</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;OK&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;请求成功&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">201</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Created&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;资源已创建&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">202</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Accepted&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;请求已接受&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">204</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;No Content&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;无内容&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">206</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Partial Content&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;部分内容&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 3xx 重定向状态码</span>
</span></span><span class="line"><span class="cl">            <span class="mi">301</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Moved Permanently&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;永久重定向&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">302</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Found&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;临时重定向&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">304</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Modified&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;未修改&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">307</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Temporary Redirect&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;临时重定向&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">308</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Permanent Redirect&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;永久重定向&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 4xx 客户端错误状态码</span>
</span></span><span class="line"><span class="cl">            <span class="mi">400</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Bad Request&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;请求错误&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">401</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Unauthorized&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;未授权&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">403</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Forbidden&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;禁止访问&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">404</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Found&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;资源未找到&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">405</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Method Not Allowed&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;方法不允许&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">409</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Conflict&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;冲突&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">422</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Unprocessable Entity&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;无法处理的实体&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">429</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Too Many Requests&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;请求过多&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            
</span></span><span class="line"><span class="cl">            <span class="c1"># 5xx 服务器错误状态码</span>
</span></span><span class="line"><span class="cl">            <span class="mi">500</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Internal Server Error&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;服务器内部错误&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">501</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Not Implemented&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;未实现&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">502</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Bad Gateway&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;网关错误&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">503</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Service Unavailable&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;服务不可用&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="mi">504</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Gateway Timeout&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;网关超时&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_status_info</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">code</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取状态码信息&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">code</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">status_codes</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">status_codes</span><span class="p">[</span><span class="n">code</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Unknown&#34;</span><span class="p">,</span> <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;未知状态码&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_category</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">code</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取状态码类别&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="mi">100</span> <span class="o">&lt;=</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="mi">200</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s2">&#34;信息性响应&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="mi">200</span> <span class="o">&lt;=</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="mi">300</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s2">&#34;成功响应&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="mi">300</span> <span class="o">&lt;=</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="mi">400</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s2">&#34;重定向&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="mi">400</span> <span class="o">&lt;=</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="mi">500</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s2">&#34;客户端错误&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="mi">500</span> <span class="o">&lt;=</span> <span class="n">code</span> <span class="o">&lt;</span> <span class="mi">600</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s2">&#34;服务器错误&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="s2">&#34;未知类别&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">is_error</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">code</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;判断是否为错误状态码&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">code</span> <span class="o">&gt;=</span> <span class="mi">400</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 状态码使用示例</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">handle_api_response</span><span class="p">(</span><span class="n">status_code</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;处理API响应&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="n">status_handler</span> <span class="o">=</span> <span class="n">HTTPStatusCodes</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">info</span> <span class="o">=</span> <span class="n">status_handler</span><span class="o">.</span><span class="n">get_status_info</span><span class="p">(</span><span class="n">status_code</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="n">category</span> <span class="o">=</span> <span class="n">status_handler</span><span class="o">.</span><span class="n">get_category</span><span class="p">(</span><span class="n">status_code</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="n">response</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;status_code&#34;</span><span class="p">:</span> <span class="n">status_code</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;status_name&#34;</span><span class="p">:</span> <span class="n">info</span><span class="p">[</span><span class="s2">&#34;name&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;description&#34;</span><span class="p">:</span> <span class="n">info</span><span class="p">[</span><span class="s2">&#34;description&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;category&#34;</span><span class="p">:</span> <span class="n">category</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;is_error&#34;</span><span class="p">:</span> <span class="n">status_handler</span><span class="o">.</span><span class="n">is_error</span><span class="p">(</span><span class="n">status_code</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="n">data</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">response</span><span class="p">[</span><span class="s2">&#34;data&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="n">response</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;成功响应:&#34;</span><span class="p">,</span> <span class="n">handle_api_response</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="p">{</span><span class="s2">&#34;message&#34;</span><span class="p">:</span> <span class="s2">&#34;操作成功&#34;</span><span class="p">}))</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;客户端错误:&#34;</span><span class="p">,</span> <span class="n">handle_api_response</span><span class="p">(</span><span class="mi">404</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;服务器错误:&#34;</span><span class="p">,</span> <span class="n">handle_api_response</span><span class="p">(</span><span class="mi">500</span><span class="p">))</span>
</span></span></code></pre></div><h2 id="http头字段详解">HTTP头字段详解</h2>
<h3 id="常用请求头">常用请求头</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPHeaders</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP头字段详解&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">request_headers</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Accept&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定客户端能够接收的内容类型&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Accept: application/json, text/html&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Accept-Encoding&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定客户端支持的编码格式&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Accept-Encoding: gzip, deflate, br&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Accept-Language&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定客户端偏好的语言&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Accept-Language: zh-CN,zh;q=0.9,en;q=0.8&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Authorization&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;包含认证凭据&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Authorization: Bearer eyJhbGciOiJIUzI1NiIs...&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Cache-Control&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定缓存机制&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Cache-Control: no-cache, max-age=0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Content-Type&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定请求体的媒体类型&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Content-Type: application/json; charset=utf-8&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Cookie&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;发送存储的Cookie&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Cookie: sessionid=abc123; csrftoken=xyz789&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Host&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定服务器的域名和端口&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Host: api.example.com:443&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;必需&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Referer&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定请求来源页面&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Referer: https://example.com/page&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;User-Agent&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;标识客户端应用程序&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">response_headers</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Access-Control-Allow-Origin&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;CORS跨域访问控制&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Access-Control-Allow-Origin: *&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Cache-Control&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定缓存策略&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Cache-Control: public, max-age=3600&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Content-Encoding&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定内容编码格式&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Content-Encoding: gzip&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Content-Length&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定响应体长度&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Content-Length: 1024&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Content-Type&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定响应体的媒体类型&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Content-Type: application/json; charset=utf-8&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;ETag&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;资源的唯一标识符&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;ETag: </span><span class="se">\&#34;</span><span class="s2">33a64df551425fcc55e4d42a148795d9f25f89d4</span><span class="se">\&#34;</span><span class="s2">&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Expires&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;指定资源过期时间&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Expires: Wed, 21 Oct 2024 07:28:00 GMT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Last-Modified&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;资源最后修改时间&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Last-Modified: Wed, 21 Oct 2024 07:28:00 GMT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;中&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Location&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;重定向的目标URL&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Location: https://example.com/new-page&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Set-Cookie&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;设置Cookie&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Set-Cookie: sessionid=abc123; HttpOnly; Secure&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;重要性&#34;</span><span class="p">:</span> <span class="s2">&#34;高&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 头字段处理示例</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HeaderProcessor</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP头字段处理器&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">headers</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">add_header</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;添加头字段&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_content_type</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取内容类型&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">content_type</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;;&#39;</span> <span class="ow">in</span> <span class="n">content_type</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">content_type</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;;&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">content_type</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_charset</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取字符编码&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">content_type</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;charset=&#39;</span> <span class="ow">in</span> <span class="n">content_type</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">content_type</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;charset=&#39;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s1">&#39;utf-8&#39;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">is_json</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;判断是否为JSON格式&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_content_type</span><span class="p">()</span> <span class="o">==</span> <span class="s1">&#39;application/json&#39;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_cache_control</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;解析Cache-Control头&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">cache_control</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;Cache-Control&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">directives</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">directive</span> <span class="ow">in</span> <span class="n">cache_control</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">directive</span> <span class="o">=</span> <span class="n">directive</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="s1">&#39;=&#39;</span> <span class="ow">in</span> <span class="n">directive</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">directive</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">directives</span><span class="p">[</span><span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">directives</span><span class="p">[</span><span class="n">directive</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">directives</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_authorization_type</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取认证类型&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">auth</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">headers</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">auth</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">auth</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="n">processor</span> <span class="o">=</span> <span class="n">HeaderProcessor</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">processor</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;application/json; charset=utf-8&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">processor</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s1">&#39;Cache-Control&#39;</span><span class="p">,</span> <span class="s1">&#39;public, max-age=3600, must-revalidate&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">processor</span><span class="o">.</span><span class="n">add_header</span><span class="p">(</span><span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;Bearer eyJhbGciOiJIUzI1NiIs...&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;内容类型:&#34;</span><span class="p">,</span> <span class="n">processor</span><span class="o">.</span><span class="n">get_content_type</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;字符编码:&#34;</span><span class="p">,</span> <span class="n">processor</span><span class="o">.</span><span class="n">get_charset</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;是否JSON:&#34;</span><span class="p">,</span> <span class="n">processor</span><span class="o">.</span><span class="n">is_json</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;缓存控制:&#34;</span><span class="p">,</span> <span class="n">processor</span><span class="o">.</span><span class="n">get_cache_control</span><span class="p">())</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;认证类型:&#34;</span><span class="p">,</span> <span class="n">processor</span><span class="o">.</span><span class="n">get_authorization_type</span><span class="p">())</span>
</span></span></code></pre></div><h2 id="http缓存机制">HTTP缓存机制</h2>
<h3 id="缓存策略详解">缓存策略详解</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">hashlib</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">time</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span><span class="p">,</span> <span class="n">timedelta</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPCache</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP缓存机制实现&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">cache</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">generate_etag</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">content</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;生成ETag&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">(</span><span class="n">content</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">is_fresh</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cache_entry</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;检查缓存是否新鲜&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;expires&#39;</span> <span class="ow">in</span> <span class="n">cache_entry</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;expires&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;max_age&#39;</span> <span class="ow">in</span> <span class="n">cache_entry</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">age</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span> <span class="o">-</span> <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;cached_at&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="n">age</span><span class="o">.</span><span class="n">total_seconds</span><span class="p">()</span> <span class="o">&lt;</span> <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;max_age&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">handle_cache_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;处理缓存请求&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">headers</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">headers</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">cache_entry</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cache</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查是否有缓存</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="n">cache_entry</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;cache_status&#34;</span><span class="p">:</span> <span class="s2">&#34;MISS&#34;</span><span class="p">,</span> <span class="s2">&#34;should_fetch&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查缓存是否新鲜</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_fresh</span><span class="p">(</span><span class="n">cache_entry</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;cache_status&#34;</span><span class="p">:</span> <span class="s2">&#34;STALE&#34;</span><span class="p">,</span> <span class="s2">&#34;should_fetch&#34;</span><span class="p">:</span> <span class="kc">True</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查条件请求</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;If-None-Match&#39;</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">headers</span><span class="p">[</span><span class="s1">&#39;If-None-Match&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="n">cache_entry</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;etag&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;cache_status&#34;</span><span class="p">:</span> <span class="s2">&#34;NOT_MODIFIED&#34;</span><span class="p">,</span> <span class="s2">&#34;should_fetch&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;If-Modified-Since&#39;</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">if_modified</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">strptime</span><span class="p">(</span><span class="n">headers</span><span class="p">[</span><span class="s1">&#39;If-Modified-Since&#39;</span><span class="p">],</span> 
</span></span><span class="line"><span class="cl">                                          <span class="s1">&#39;</span><span class="si">%a</span><span class="s1">, </span><span class="si">%d</span><span class="s1"> %b %Y %H:%M:%S GMT&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">cache_entry</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;last_modified&#39;</span><span class="p">)</span> <span class="ow">and</span> <span class="n">if_modified</span> <span class="o">&gt;=</span> <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;last_modified&#39;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;cache_status&#34;</span><span class="p">:</span> <span class="s2">&#34;NOT_MODIFIED&#34;</span><span class="p">,</span> <span class="s2">&#34;should_fetch&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span><span class="s2">&#34;cache_status&#34;</span><span class="p">:</span> <span class="s2">&#34;HIT&#34;</span><span class="p">,</span> <span class="s2">&#34;should_fetch&#34;</span><span class="p">:</span> <span class="kc">False</span><span class="p">,</span> <span class="s2">&#34;data&#34;</span><span class="p">:</span> <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">]}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">store_response</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">response_data</span><span class="p">,</span> <span class="n">headers</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;存储响应到缓存&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">cache_entry</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;data&#34;</span><span class="p">:</span> <span class="n">response_data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;cached_at&#34;</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">(),</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;headers&#34;</span><span class="p">:</span> <span class="n">headers</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 处理ETag</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;ETag&#39;</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;etag&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">headers</span><span class="p">[</span><span class="s1">&#39;ETag&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 处理Last-Modified</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;Last-Modified&#39;</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;last_modified&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">strptime</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="n">headers</span><span class="p">[</span><span class="s1">&#39;Last-Modified&#39;</span><span class="p">],</span> <span class="s1">&#39;</span><span class="si">%a</span><span class="s1">, </span><span class="si">%d</span><span class="s1"> %b %Y %H:%M:%S GMT&#39;</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 处理Expires</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;Expires&#39;</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;expires&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">strptime</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                <span class="n">headers</span><span class="p">[</span><span class="s1">&#39;Expires&#39;</span><span class="p">],</span> <span class="s1">&#39;</span><span class="si">%a</span><span class="s1">, </span><span class="si">%d</span><span class="s1"> %b %Y %H:%M:%S GMT&#39;</span>
</span></span><span class="line"><span class="cl">            <span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 处理Cache-Control</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;Cache-Control&#39;</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">cache_control</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">parse_cache_control</span><span class="p">(</span><span class="n">headers</span><span class="p">[</span><span class="s1">&#39;Cache-Control&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="s1">&#39;max-age&#39;</span> <span class="ow">in</span> <span class="n">cache_control</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">cache_entry</span><span class="p">[</span><span class="s1">&#39;max_age&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">cache_control</span><span class="p">[</span><span class="s1">&#39;max-age&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="s1">&#39;no-cache&#39;</span> <span class="ow">in</span> <span class="n">cache_control</span> <span class="ow">or</span> <span class="s1">&#39;no-store&#39;</span> <span class="ow">in</span> <span class="n">cache_control</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">return</span>  <span class="c1"># 不缓存</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">cache</span><span class="p">[</span><span class="n">url</span><span class="p">]</span> <span class="o">=</span> <span class="n">cache_entry</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">parse_cache_control</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cache_control_header</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;解析Cache-Control头&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">directives</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">directive</span> <span class="ow">in</span> <span class="n">cache_control_header</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">directive</span> <span class="o">=</span> <span class="n">directive</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="s1">&#39;=&#39;</span> <span class="ow">in</span> <span class="n">directive</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="n">directive</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="n">directives</span><span class="p">[</span><span class="n">key</span><span class="o">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">value</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">directives</span><span class="p">[</span><span class="n">directive</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">directives</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 缓存策略示例</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">CacheStrategy</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;缓存策略示例&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="nd">@staticmethod</span>
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_cache_headers</span><span class="p">(</span><span class="n">resource_type</span><span class="p">,</span> <span class="n">max_age</span><span class="o">=</span><span class="mi">3600</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;根据资源类型获取缓存头&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">strategies</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;static&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Cache-Control&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;public, max-age=</span><span class="si">{</span><span class="n">max_age</span> <span class="o">*</span> <span class="mi">24</span> <span class="o">*</span> <span class="mi">365</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">,</span>  <span class="c1"># 1年</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Expires&#34;</span><span class="p">:</span> <span class="p">(</span><span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span> <span class="o">+</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">days</span><span class="o">=</span><span class="mi">365</span><span class="p">))</span><span class="o">.</span><span class="n">strftime</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">                    <span class="s1">&#39;</span><span class="si">%a</span><span class="s1">, </span><span class="si">%d</span><span class="s1"> %b %Y %H:%M:%S GMT&#39;</span>
</span></span><span class="line"><span class="cl">                <span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;api&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Cache-Control&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;private, max-age=</span><span class="si">{</span><span class="n">max_age</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">,</span>  <span class="c1"># 1小时</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;ETag&#34;</span><span class="p">:</span> <span class="s1">&#39;&#34;&#39;</span> <span class="o">+</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">md5</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">())</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span> <span class="o">+</span> <span class="s1">&#39;&#34;&#39;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;dynamic&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Cache-Control&#34;</span><span class="p">:</span> <span class="s2">&#34;no-cache, must-revalidate&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Pragma&#34;</span><span class="p">:</span> <span class="s2">&#34;no-cache&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;sensitive&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Cache-Control&#34;</span><span class="p">:</span> <span class="s2">&#34;no-store, no-cache, must-revalidate&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Pragma&#34;</span><span class="p">:</span> <span class="s2">&#34;no-cache&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Expires&#34;</span><span class="p">:</span> <span class="s2">&#34;0&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">strategies</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">resource_type</span><span class="p">,</span> <span class="n">strategies</span><span class="p">[</span><span class="s2">&#34;dynamic&#34;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="n">cache</span> <span class="o">=</span> <span class="n">HTTPCache</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 模拟第一次请求</span>
</span></span><span class="line"><span class="cl"><span class="n">url</span> <span class="o">=</span> <span class="s2">&#34;https://api.example.com/users&#34;</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">cache</span><span class="o">.</span><span class="n">handle_cache_request</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;第一次请求:&#34;</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 存储响应</span>
</span></span><span class="line"><span class="cl"><span class="n">response_data</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;users&#34;</span><span class="p">:</span> <span class="p">[{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三&#34;</span><span class="p">}]}</span>
</span></span><span class="line"><span class="cl"><span class="n">response_headers</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Cache-Control&#34;</span><span class="p">:</span> <span class="s2">&#34;public, max-age=3600&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;ETag&#34;</span><span class="p">:</span> <span class="s1">&#39;&#34;abc123&#34;&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;Last-Modified&#34;</span><span class="p">:</span> <span class="s2">&#34;Mon, 27 Feb 2024 10:15:30 GMT&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">cache</span><span class="o">.</span><span class="n">store_response</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">response_data</span><span class="p">,</span> <span class="n">response_headers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 模拟第二次请求</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">cache</span><span class="o">.</span><span class="n">handle_cache_request</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;第二次请求:&#34;</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 模拟条件请求</span>
</span></span><span class="line"><span class="cl"><span class="n">conditional_headers</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;If-None-Match&#34;</span><span class="p">:</span> <span class="s1">&#39;&#34;abc123&#34;&#39;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">result</span> <span class="o">=</span> <span class="n">cache</span><span class="o">.</span><span class="n">handle_cache_request</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">conditional_headers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;条件请求:&#34;</span><span class="p">,</span> <span class="n">result</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="http安全机制">HTTP安全机制</h2>
<h3 id="https和安全头">HTTPS和安全头</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPSecurity</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP安全机制&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">security_headers</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Strict-Transport-Security&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;强制使用HTTPS&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Strict-Transport-Security: max-age=31536000; includeSubDomains&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护&#34;</span><span class="p">:</span> <span class="s2">&#34;中间人攻击&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Content-Security-Policy&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;防止XSS攻击&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Content-Security-Policy: default-src &#39;self&#39;; script-src &#39;self&#39; &#39;unsafe-inline&#39;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护&#34;</span><span class="p">:</span> <span class="s2">&#34;跨站脚本攻击&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;X-Frame-Options&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;防止点击劫持&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;X-Frame-Options: DENY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护&#34;</span><span class="p">:</span> <span class="s2">&#34;点击劫持攻击&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;X-Content-Type-Options&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;防止MIME类型嗅探&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;X-Content-Type-Options: nosniff&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护&#34;</span><span class="p">:</span> <span class="s2">&#34;MIME嗅探攻击&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;X-XSS-Protection&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;启用XSS过滤器&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;X-XSS-Protection: 1; mode=block&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护&#34;</span><span class="p">:</span> <span class="s2">&#34;反射型XSS攻击&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;Referrer-Policy&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;用途&#34;</span><span class="p">:</span> <span class="s2">&#34;控制Referer头信息&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;示例&#34;</span><span class="p">:</span> <span class="s2">&#34;Referrer-Policy: strict-origin-when-cross-origin&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;防护&#34;</span><span class="p">:</span> <span class="s2">&#34;信息泄露&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_security_headers</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">security_level</span><span class="o">=</span><span class="s2">&#34;high&#34;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;获取安全头配置&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">security_level</span> <span class="o">==</span> <span class="s2">&#34;high&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Strict-Transport-Security&#34;</span><span class="p">:</span> <span class="s2">&#34;max-age=31536000; includeSubDomains; preload&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Content-Security-Policy&#34;</span><span class="p">:</span> <span class="s2">&#34;default-src &#39;self&#39;; script-src &#39;self&#39;; style-src &#39;self&#39; &#39;unsafe-inline&#39;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;X-Frame-Options&#34;</span><span class="p">:</span> <span class="s2">&#34;DENY&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;X-Content-Type-Options&#34;</span><span class="p">:</span> <span class="s2">&#34;nosniff&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;X-XSS-Protection&#34;</span><span class="p">:</span> <span class="s2">&#34;1; mode=block&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Referrer-Policy&#34;</span><span class="p">:</span> <span class="s2">&#34;strict-origin-when-cross-origin&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">elif</span> <span class="n">security_level</span> <span class="o">==</span> <span class="s2">&#34;medium&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Strict-Transport-Security&#34;</span><span class="p">:</span> <span class="s2">&#34;max-age=31536000&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;Content-Security-Policy&#34;</span><span class="p">:</span> <span class="s2">&#34;default-src &#39;self&#39; &#39;unsafe-inline&#39;&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;X-Frame-Options&#34;</span><span class="p">:</span> <span class="s2">&#34;SAMEORIGIN&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;X-Content-Type-Options&#34;</span><span class="p">:</span> <span class="s2">&#34;nosniff&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;X-Content-Type-Options&#34;</span><span class="p">:</span> <span class="s2">&#34;nosniff&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">validate_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">headers</span><span class="p">,</span> <span class="n">body</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;验证请求安全性&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">issues</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查Content-Type</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">body</span> <span class="ow">and</span> <span class="s1">&#39;Content-Type&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">issues</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;缺少Content-Type头&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查CSRF保护</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">headers</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s1">&#39;application/json&#39;</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="s1">&#39;X-Requested-With&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">headers</span> <span class="ow">and</span> <span class="s1">&#39;X-CSRF-Token&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">issues</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;可能存在CSRF风险&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查认证</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="s1">&#39;Authorization&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">headers</span> <span class="ow">and</span> <span class="s1">&#39;Cookie&#39;</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">issues</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;缺少认证信息&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;is_secure&#34;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">issues</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;issues&#34;</span><span class="p">:</span> <span class="n">issues</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># CORS处理</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">CORSHandler</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;CORS跨域资源共享处理&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">allowed_origins</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">allowed_methods</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">allowed_headers</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">allowed_origins</span> <span class="o">=</span> <span class="n">allowed_origins</span> <span class="ow">or</span> <span class="p">[</span><span class="s1">&#39;*&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">allowed_methods</span> <span class="o">=</span> <span class="n">allowed_methods</span> <span class="ow">or</span> <span class="p">[</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;POST&#39;</span><span class="p">,</span> <span class="s1">&#39;PUT&#39;</span><span class="p">,</span> <span class="s1">&#39;DELETE&#39;</span><span class="p">,</span> <span class="s1">&#39;OPTIONS&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">allowed_headers</span> <span class="o">=</span> <span class="n">allowed_headers</span> <span class="ow">or</span> <span class="p">[</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;Authorization&#39;</span><span class="p">,</span> <span class="s1">&#39;X-Requested-With&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">handle_preflight</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">origin</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">headers</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;处理预检请求&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">response_headers</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查来源</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_origin_allowed</span><span class="p">(</span><span class="n">origin</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">response_headers</span><span class="p">[</span><span class="s1">&#39;Access-Control-Allow-Origin&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">origin</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查方法</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">method</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">allowed_methods</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">response_headers</span><span class="p">[</span><span class="s1">&#39;Access-Control-Allow-Methods&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">allowed_methods</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 检查头部</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">headers</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">requested_headers</span> <span class="o">=</span> <span class="p">[</span><span class="n">h</span><span class="o">.</span><span class="n">strip</span><span class="p">()</span> <span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">headers</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl">            <span class="n">allowed</span> <span class="o">=</span> <span class="p">[</span><span class="n">h</span> <span class="k">for</span> <span class="n">h</span> <span class="ow">in</span> <span class="n">requested_headers</span> <span class="k">if</span> <span class="n">h</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">allowed_headers</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">allowed</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">response_headers</span><span class="p">[</span><span class="s1">&#39;Access-Control-Allow-Headers&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">allowed</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">response_headers</span><span class="p">[</span><span class="s1">&#39;Access-Control-Max-Age&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;86400&#39;</span>  <span class="c1"># 24小时</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">response_headers</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">handle_actual_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">origin</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;处理实际请求&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">response_headers</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">is_origin_allowed</span><span class="p">(</span><span class="n">origin</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">            <span class="n">response_headers</span><span class="p">[</span><span class="s1">&#39;Access-Control-Allow-Origin&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">origin</span>
</span></span><span class="line"><span class="cl">            <span class="n">response_headers</span><span class="p">[</span><span class="s1">&#39;Access-Control-Allow-Credentials&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;true&#39;</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">response_headers</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">is_origin_allowed</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">origin</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;检查来源是否被允许&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="s1">&#39;*&#39;</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">allowed_origins</span> <span class="ow">or</span> <span class="n">origin</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">allowed_origins</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="n">security</span> <span class="o">=</span> <span class="n">HTTPSecurity</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;高安全级别头部:&#34;</span><span class="p">,</span> <span class="n">security</span><span class="o">.</span><span class="n">get_security_headers</span><span class="p">(</span><span class="s2">&#34;high&#34;</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># CORS示例</span>
</span></span><span class="line"><span class="cl"><span class="n">cors</span> <span class="o">=</span> <span class="n">CORSHandler</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowed_origins</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;https://example.com&#39;</span><span class="p">,</span> <span class="s1">&#39;https://app.example.com&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowed_methods</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;POST&#39;</span><span class="p">,</span> <span class="s1">&#39;PUT&#39;</span><span class="p">,</span> <span class="s1">&#39;DELETE&#39;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="n">allowed_headers</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;Content-Type&#39;</span><span class="p">,</span> <span class="s1">&#39;Authorization&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">preflight_headers</span> <span class="o">=</span> <span class="n">cors</span><span class="o">.</span><span class="n">handle_preflight</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">origin</span><span class="o">=</span><span class="s1">&#39;https://example.com&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">method</span><span class="o">=</span><span class="s1">&#39;POST&#39;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="n">headers</span><span class="o">=</span><span class="s1">&#39;Content-Type, Authorization&#39;</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;预检响应头:&#34;</span><span class="p">,</span> <span class="n">preflight_headers</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="http2-和-http3-新特性">HTTP/2 和 HTTP/3 新特性</h2>
<h3 id="http2-特性">HTTP/2 特性</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTP2Features</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP/2 特性演示&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">streams</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">next_stream_id</span> <span class="o">=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">create_stream</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;创建HTTP/2流&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">stream_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">next_stream_id</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">next_stream_id</span> <span class="o">+=</span> <span class="mi">2</span>  <span class="c1"># 客户端流ID为奇数</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">stream</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="n">stream_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;method&#34;</span><span class="p">:</span> <span class="n">method</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;path&#34;</span><span class="p">:</span> <span class="n">path</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;headers&#34;</span><span class="p">:</span> <span class="n">headers</span> <span class="ow">or</span> <span class="p">{},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;state&#34;</span><span class="p">:</span> <span class="s2">&#34;open&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;priority&#34;</span><span class="p">:</span> <span class="mi">16</span><span class="p">,</span>  <span class="c1"># 默认优先级</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;dependency&#34;</span><span class="p">:</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">streams</span><span class="p">[</span><span class="n">stream_id</span><span class="p">]</span> <span class="o">=</span> <span class="n">stream</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">stream_id</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">set_priority</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">stream_id</span><span class="p">,</span> <span class="n">priority</span><span class="p">,</span> <span class="n">dependency</span><span class="o">=</span><span class="mi">0</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;设置流优先级&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">stream_id</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">streams</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">streams</span><span class="p">[</span><span class="n">stream_id</span><span class="p">][</span><span class="s2">&#34;priority&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">priority</span>
</span></span><span class="line"><span class="cl">            <span class="bp">self</span><span class="o">.</span><span class="n">streams</span><span class="p">[</span><span class="n">stream_id</span><span class="p">][</span><span class="s2">&#34;dependency&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">dependency</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">server_push</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">parent_stream_id</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;服务器推送&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">push_stream_id</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">next_stream_id</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">next_stream_id</span> <span class="o">+=</span> <span class="mi">2</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">push_stream</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="n">push_stream_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;method&#34;</span><span class="p">:</span> <span class="s2">&#34;GET&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;path&#34;</span><span class="p">:</span> <span class="n">path</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;headers&#34;</span><span class="p">:</span> <span class="n">headers</span> <span class="ow">or</span> <span class="p">{},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;state&#34;</span><span class="p">:</span> <span class="s2">&#34;reserved_local&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;parent&#34;</span><span class="p">:</span> <span class="n">parent_stream_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;pushed&#34;</span><span class="p">:</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">streams</span><span class="p">[</span><span class="n">push_stream_id</span><span class="p">]</span> <span class="o">=</span> <span class="n">push_stream</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">push_stream_id</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">compress_headers</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">headers</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;HPACK头部压缩模拟&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># 简化的头部压缩示例</span>
</span></span><span class="line"><span class="cl">        <span class="n">compressed_size</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">        <span class="n">static_table</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;:method&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;GET&#34;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s2">&#34;POST&#34;</span><span class="p">:</span> <span class="mi">3</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;:path&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;/&#34;</span><span class="p">:</span> <span class="mi">4</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;:scheme&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;https&#34;</span><span class="p">:</span> <span class="mi">7</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;content-type&#34;</span><span class="p">:</span> <span class="p">{</span><span class="s2">&#34;application/json&#34;</span><span class="p">:</span> <span class="mi">31</span><span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">for</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">headers</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">            <span class="k">if</span> <span class="n">name</span> <span class="ow">in</span> <span class="n">static_table</span> <span class="ow">and</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">static_table</span><span class="p">[</span><span class="n">name</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">                <span class="n">compressed_size</span> <span class="o">+=</span> <span class="mi">1</span>  <span class="c1"># 索引引用</span>
</span></span><span class="line"><span class="cl">            <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="n">compressed_size</span> <span class="o">+=</span> <span class="nb">len</span><span class="p">(</span><span class="n">name</span><span class="p">)</span> <span class="o">+</span> <span class="nb">len</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>  <span class="c1"># 字面量</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">original_size</span> <span class="o">=</span> <span class="nb">sum</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">k</span><span class="p">)</span> <span class="o">+</span> <span class="nb">len</span><span class="p">(</span><span class="n">v</span><span class="p">)</span> <span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">v</span> <span class="ow">in</span> <span class="n">headers</span><span class="o">.</span><span class="n">items</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">        <span class="n">compression_ratio</span> <span class="o">=</span> <span class="n">compressed_size</span> <span class="o">/</span> <span class="n">original_size</span> <span class="k">if</span> <span class="n">original_size</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="k">else</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;original_size&#34;</span><span class="p">:</span> <span class="n">original_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;compressed_size&#34;</span><span class="p">:</span> <span class="n">compressed_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;compression_ratio&#34;</span><span class="p">:</span> <span class="n">compression_ratio</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># HTTP/3 特性</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTP3Features</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP/3 特性演示&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">connections</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">connection_id</span> <span class="o">=</span> <span class="mi">0</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">create_connection</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">server_name</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;创建QUIC连接&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">connection_id</span> <span class="o">+=</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">connection</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="bp">self</span><span class="o">.</span><span class="n">connection_id</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;server_name&#34;</span><span class="p">:</span> <span class="n">server_name</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;state&#34;</span><span class="p">:</span> <span class="s2">&#34;handshaking&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;streams&#34;</span><span class="p">:</span> <span class="p">{},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;rtt&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;congestion_window&#34;</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;migration_capable&#34;</span><span class="p">:</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">connection_id</span><span class="p">]</span> <span class="o">=</span> <span class="n">connection</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">connection_id</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">zero_rtt_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">connection_id</span><span class="p">,</span> <span class="n">method</span><span class="p">,</span> <span class="n">path</span><span class="p">,</span> <span class="n">early_data</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;0-RTT请求&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">connection_id</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="kc">None</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">connection</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">[</span><span class="n">connection_id</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="c1"># 模拟0-RTT请求</span>
</span></span><span class="line"><span class="cl">        <span class="n">request</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;method&#34;</span><span class="p">:</span> <span class="n">method</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;path&#34;</span><span class="p">:</span> <span class="n">path</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;early_data&#34;</span><span class="p">:</span> <span class="n">early_data</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;rtt&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>  <span class="c1"># 0-RTT</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;timestamp&#34;</span><span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">request</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">connection_migration</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">connection_id</span><span class="p">,</span> <span class="n">new_address</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;连接迁移&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">connection_id</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">connection</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">connections</span><span class="p">[</span><span class="n">connection_id</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">connection</span><span class="p">[</span><span class="s2">&#34;migration_capable&#34;</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">            <span class="n">connection</span><span class="p">[</span><span class="s2">&#34;address&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">new_address</span>
</span></span><span class="line"><span class="cl">            <span class="n">connection</span><span class="p">[</span><span class="s2">&#34;migrated&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">            <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">get_performance_comparison</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;性能对比&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTTP/1.1&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;连接建立&#34;</span><span class="p">:</span> <span class="s2">&#34;3-RTT (TCP + TLS)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;多路复用&#34;</span><span class="p">:</span> <span class="s2">&#34;无&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;头部压缩&#34;</span><span class="p">:</span> <span class="s2">&#34;无&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;服务器推送&#34;</span><span class="p">:</span> <span class="s2">&#34;无&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTTP/2&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;连接建立&#34;</span><span class="p">:</span> <span class="s2">&#34;3-RTT (TCP + TLS)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;多路复用&#34;</span><span class="p">:</span> <span class="s2">&#34;有 (单连接)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;头部压缩&#34;</span><span class="p">:</span> <span class="s2">&#34;HPACK&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;服务器推送&#34;</span><span class="p">:</span> <span class="s2">&#34;有&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTTP/3&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;连接建立&#34;</span><span class="p">:</span> <span class="s2">&#34;1-RTT (QUIC)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;多路复用&#34;</span><span class="p">:</span> <span class="s2">&#34;有 (无队头阻塞)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;头部压缩&#34;</span><span class="p">:</span> <span class="s2">&#34;QPACK&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;服务器推送&#34;</span><span class="p">:</span> <span class="s2">&#34;有&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;连接迁移&#34;</span><span class="p">:</span> <span class="s2">&#34;有&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;0-RTT&#34;</span><span class="p">:</span> <span class="s2">&#34;有&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="n">http2</span> <span class="o">=</span> <span class="n">HTTP2Features</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 创建多个流</span>
</span></span><span class="line"><span class="cl"><span class="n">stream1</span> <span class="o">=</span> <span class="n">http2</span><span class="o">.</span><span class="n">create_stream</span><span class="p">(</span><span class="s2">&#34;GET&#34;</span><span class="p">,</span> <span class="s2">&#34;/api/users&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">stream2</span> <span class="o">=</span> <span class="n">http2</span><span class="o">.</span><span class="n">create_stream</span><span class="p">(</span><span class="s2">&#34;GET&#34;</span><span class="p">,</span> <span class="s2">&#34;/api/posts&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="n">stream3</span> <span class="o">=</span> <span class="n">http2</span><span class="o">.</span><span class="n">create_stream</span><span class="p">(</span><span class="s2">&#34;GET&#34;</span><span class="p">,</span> <span class="s2">&#34;/static/app.js&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 设置优先级</span>
</span></span><span class="line"><span class="cl"><span class="n">http2</span><span class="o">.</span><span class="n">set_priority</span><span class="p">(</span><span class="n">stream3</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span>  <span class="c1"># 静态资源优先级较低</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 服务器推送</span>
</span></span><span class="line"><span class="cl"><span class="n">push_stream</span> <span class="o">=</span> <span class="n">http2</span><span class="o">.</span><span class="n">server_push</span><span class="p">(</span><span class="n">stream1</span><span class="p">,</span> <span class="s2">&#34;/static/style.css&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 头部压缩</span>
</span></span><span class="line"><span class="cl"><span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;:method&#34;</span><span class="p">:</span> <span class="s2">&#34;GET&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;:path&#34;</span><span class="p">:</span> <span class="s2">&#34;/api/users&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;:scheme&#34;</span><span class="p">:</span> <span class="s2">&#34;https&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;content-type&#34;</span><span class="p">:</span> <span class="s2">&#34;application/json&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="n">compression_result</span> <span class="o">=</span> <span class="n">http2</span><span class="o">.</span><span class="n">compress_headers</span><span class="p">(</span><span class="n">headers</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;头部压缩结果:&#34;</span><span class="p">,</span> <span class="n">compression_result</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># HTTP/3示例</span>
</span></span><span class="line"><span class="cl"><span class="n">http3</span> <span class="o">=</span> <span class="n">HTTP3Features</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">conn_id</span> <span class="o">=</span> <span class="n">http3</span><span class="o">.</span><span class="n">create_connection</span><span class="p">(</span><span class="s2">&#34;api.example.com&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 0-RTT请求</span>
</span></span><span class="line"><span class="cl"><span class="n">zero_rtt_req</span> <span class="o">=</span> <span class="n">http3</span><span class="o">.</span><span class="n">zero_rtt_request</span><span class="p">(</span><span class="n">conn_id</span><span class="p">,</span> <span class="s2">&#34;GET&#34;</span><span class="p">,</span> <span class="s2">&#34;/api/users&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;0-RTT请求:&#34;</span><span class="p">,</span> <span class="n">zero_rtt_req</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 性能对比</span>
</span></span><span class="line"><span class="cl"><span class="n">comparison</span> <span class="o">=</span> <span class="n">http3</span><span class="o">.</span><span class="n">get_performance_comparison</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="k">for</span> <span class="n">version</span><span class="p">,</span> <span class="n">features</span> <span class="ow">in</span> <span class="n">comparison</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">    <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;</span><span class="se">\n</span><span class="si">{</span><span class="n">version</span><span class="si">}</span><span class="s2">:&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">    <span class="k">for</span> <span class="n">feature</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">features</span><span class="o">.</span><span class="n">items</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;  </span><span class="si">{</span><span class="n">feature</span><span class="si">}</span><span class="s2">: </span><span class="si">{</span><span class="n">value</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="实际应用和最佳实践">实际应用和最佳实践</h2>
<h3 id="web-api设计最佳实践">Web API设计最佳实践</h3>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">WebAPIBestPractices</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;Web API设计最佳实践&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">api_guidelines</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;URL设计&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用名词而非动词&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用复数形式&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;保持URL简洁&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用连字符分隔单词&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;HTTP方法使用&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;GET: 获取资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;POST: 创建资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;PUT: 完整更新资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;PATCH: 部分更新资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;DELETE: 删除资源&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;状态码使用&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;200: 成功&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;201: 创建成功&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;204: 无内容&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;400: 请求错误&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;401: 未授权&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;403: 禁止访问&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;404: 资源未找到&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;500: 服务器错误&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;响应格式&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用JSON格式&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;保持响应结构一致&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;包含适当的元数据&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;提供错误详情&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">design_api_response</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">error</span><span class="o">=</span><span class="kc">None</span><span class="p">,</span> <span class="n">meta</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;设计API响应格式&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">response</span> <span class="o">=</span> <span class="p">{}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">error</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">response</span><span class="p">[</span><span class="s2">&#34;success&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">            <span class="n">response</span><span class="p">[</span><span class="s2">&#34;error&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;code&#34;</span><span class="p">:</span> <span class="n">error</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;code&#34;</span><span class="p">,</span> <span class="s2">&#34;UNKNOWN_ERROR&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;message&#34;</span><span class="p">:</span> <span class="n">error</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;message&#34;</span><span class="p">,</span> <span class="s2">&#34;An error occurred&#34;</span><span class="p">),</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;details&#34;</span><span class="p">:</span> <span class="n">error</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s2">&#34;details&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="k">else</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">response</span><span class="p">[</span><span class="s2">&#34;success&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">            <span class="n">response</span><span class="p">[</span><span class="s2">&#34;data&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">meta</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">response</span><span class="p">[</span><span class="s2">&#34;meta&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">meta</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">response</span><span class="p">[</span><span class="s2">&#34;timestamp&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">isoformat</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">response</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">paginate_response</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">items</span><span class="p">,</span> <span class="n">page</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span> <span class="n">per_page</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="n">total</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;分页响应&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">start</span> <span class="o">=</span> <span class="p">(</span><span class="n">page</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">per_page</span>
</span></span><span class="line"><span class="cl">        <span class="n">end</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="n">per_page</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">paginated_items</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="n">start</span><span class="p">:</span><span class="n">end</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">total</span> <span class="ow">is</span> <span class="kc">None</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">total</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">items</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">total_pages</span> <span class="o">=</span> <span class="p">(</span><span class="n">total</span> <span class="o">+</span> <span class="n">per_page</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">//</span> <span class="n">per_page</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">design_api_response</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">            <span class="n">data</span><span class="o">=</span><span class="n">paginated_items</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="n">meta</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;pagination&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;page&#34;</span><span class="p">:</span> <span class="n">page</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;per_page&#34;</span><span class="p">:</span> <span class="n">per_page</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;total&#34;</span><span class="p">:</span> <span class="n">total</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;total_pages&#34;</span><span class="p">:</span> <span class="n">total_pages</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;has_next&#34;</span><span class="p">:</span> <span class="n">page</span> <span class="o">&lt;</span> <span class="n">total_pages</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;has_prev&#34;</span><span class="p">:</span> <span class="n">page</span> <span class="o">&gt;</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">)</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">validate_request</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">request_data</span><span class="p">,</span> <span class="n">required_fields</span><span class="o">=</span><span class="kc">None</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;请求验证&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">errors</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">required_fields</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="k">for</span> <span class="n">field</span> <span class="ow">in</span> <span class="n">required_fields</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                <span class="k">if</span> <span class="n">field</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">request_data</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">errors</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;缺少必需字段: </span><span class="si">{</span><span class="n">field</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">                <span class="k">elif</span> <span class="ow">not</span> <span class="n">request_data</span><span class="p">[</span><span class="n">field</span><span class="p">]:</span>
</span></span><span class="line"><span class="cl">                    <span class="n">errors</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;字段不能为空: </span><span class="si">{</span><span class="n">field</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;is_valid&#34;</span><span class="p">:</span> <span class="nb">len</span><span class="p">(</span><span class="n">errors</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;errors&#34;</span><span class="p">:</span> <span class="n">errors</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 性能优化建议</span>
</span></span><span class="line"><span class="cl"><span class="k">class</span> <span class="nc">HTTPPerformanceOptimization</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;&#34;&#34;HTTP性能优化&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="bp">self</span><span class="o">.</span><span class="n">optimization_techniques</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;缓存策略&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;设置适当的Cache-Control头&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用ETag进行条件请求&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;实施CDN缓存&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用浏览器缓存&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;压缩技术&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;启用Gzip/Brotli压缩&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;压缩静态资源&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;优化图片格式&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用WebP格式&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;连接优化&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用HTTP/2或HTTP/3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;启用Keep-Alive&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;减少DNS查询&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用连接池&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">],</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;请求优化&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;减少HTTP请求数量&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;合并CSS和JavaScript文件&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;使用雪碧图&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;延迟加载非关键资源&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">]</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    
</span></span><span class="line"><span class="cl">    <span class="k">def</span> <span class="nf">analyze_performance</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">response_time</span><span class="p">,</span> <span class="n">response_size</span><span class="p">,</span> <span class="n">cache_hit_ratio</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;&#34;&#34;性能分析&#34;&#34;&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="n">analysis</span> <span class="o">=</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;response_time&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;value&#34;</span><span class="p">:</span> <span class="n">response_time</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;good&#34;</span> <span class="k">if</span> <span class="n">response_time</span> <span class="o">&lt;</span> <span class="mi">200</span> <span class="k">else</span> <span class="s2">&#34;needs_improvement&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;response_size&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;value&#34;</span><span class="p">:</span> <span class="n">response_size</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;good&#34;</span> <span class="k">if</span> <span class="n">response_size</span> <span class="o">&lt;</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span> <span class="k">else</span> <span class="s2">&#34;large&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;cache_efficiency&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;hit_ratio&#34;</span><span class="p">:</span> <span class="n">cache_hit_ratio</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;status&#34;</span><span class="p">:</span> <span class="s2">&#34;good&#34;</span> <span class="k">if</span> <span class="n">cache_hit_ratio</span> <span class="o">&gt;</span> <span class="mf">0.8</span> <span class="k">else</span> <span class="s2">&#34;needs_improvement&#34;</span>
</span></span><span class="line"><span class="cl">            <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">recommendations</span> <span class="o">=</span> <span class="p">[]</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">response_time</span> <span class="o">&gt;</span> <span class="mi">200</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">recommendations</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;考虑使用CDN或优化服务器响应时间&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">response_size</span> <span class="o">&gt;</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">recommendations</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;启用压缩或优化响应内容&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="n">cache_hit_ratio</span> <span class="o">&lt;</span> <span class="mf">0.8</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">            <span class="n">recommendations</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s2">&#34;优化缓存策略&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="n">analysis</span><span class="p">[</span><span class="s2">&#34;recommendations&#34;</span><span class="p">]</span> <span class="o">=</span> <span class="n">recommendations</span>
</span></span><span class="line"><span class="cl">        
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="n">analysis</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 示例使用</span>
</span></span><span class="line"><span class="cl"><span class="n">api</span> <span class="o">=</span> <span class="n">WebAPIBestPractices</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 设计成功响应</span>
</span></span><span class="line"><span class="cl"><span class="n">success_response</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">design_api_response</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;张三&#34;</span><span class="p">,</span> <span class="s2">&#34;email&#34;</span><span class="p">:</span> <span class="s2">&#34;zhangsan@example.com&#34;</span><span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;成功响应:&#34;</span><span class="p">,</span> <span class="n">success_response</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 设计错误响应</span>
</span></span><span class="line"><span class="cl"><span class="n">error_response</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">design_api_response</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">error</span><span class="o">=</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;code&#34;</span><span class="p">:</span> <span class="s2">&#34;VALIDATION_ERROR&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;message&#34;</span><span class="p">:</span> <span class="s2">&#34;请求数据验证失败&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;details&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;邮箱格式不正确&#34;</span><span class="p">,</span> <span class="s2">&#34;密码长度不足&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;错误响应:&#34;</span><span class="p">,</span> <span class="n">error_response</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 分页响应</span>
</span></span><span class="line"><span class="cl"><span class="n">users</span> <span class="o">=</span> <span class="p">[{</span><span class="s2">&#34;id&#34;</span><span class="p">:</span> <span class="n">i</span><span class="p">,</span> <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="sa">f</span><span class="s2">&#34;用户</span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">}</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">101</span><span class="p">)]</span>
</span></span><span class="line"><span class="cl"><span class="n">paginated</span> <span class="o">=</span> <span class="n">api</span><span class="o">.</span><span class="n">paginate_response</span><span class="p">(</span><span class="n">users</span><span class="p">,</span> <span class="n">page</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">per_page</span><span class="o">=</span><span class="mi">10</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;分页响应:&#34;</span><span class="p">,</span> <span class="n">paginated</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 性能分析</span>
</span></span><span class="line"><span class="cl"><span class="n">perf</span> <span class="o">=</span> <span class="n">HTTPPerformanceOptimization</span><span class="p">()</span>
</span></span><span class="line"><span class="cl"><span class="n">analysis</span> <span class="o">=</span> <span class="n">perf</span><span class="o">.</span><span class="n">analyze_performance</span><span class="p">(</span>
</span></span><span class="line"><span class="cl">    <span class="n">response_time</span><span class="o">=</span><span class="mi">150</span><span class="p">,</span>  <span class="c1"># ms</span>
</span></span><span class="line"><span class="cl">    <span class="n">response_size</span><span class="o">=</span><span class="mi">512</span> <span class="o">*</span> <span class="mi">1024</span><span class="p">,</span>  <span class="c1"># bytes</span>
</span></span><span class="line"><span class="cl">    <span class="n">cache_hit_ratio</span><span class="o">=</span><span class="mf">0.75</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nb">print</span><span class="p">(</span><span class="s2">&#34;性能分析:&#34;</span><span class="p">,</span> <span class="n">analysis</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="学习建议和总结">学习建议和总结</h2>
<h3 id="http学习路径">HTTP学习路径</h3>
<ol>
<li><strong>基础概念</strong>：理解HTTP的工作原理和特点</li>
<li><strong>协议细节</strong>：掌握请求响应格式、状态码、头字段</li>
<li><strong>缓存机制</strong>：学习HTTP缓存策略和实现</li>
<li><strong>安全机制</strong>：了解HTTPS、CORS、安全头等</li>
<li><strong>性能优化</strong>：掌握HTTP性能优化技巧</li>
<li><strong>新版本特性</strong>：学习HTTP/2和HTTP/3的新特性</li>
</ol>
<h3 id="关键要点总结">关键要点总结</h3>
<table>
  <thead>
      <tr>
          <th>方面</th>
          <th>要点</th>
          <th>实践建议</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td><strong>请求方法</strong></td>
          <td>正确使用GET、POST、PUT、DELETE等</td>
          <td>遵循RESTful设计原则</td>
      </tr>
      <tr>
          <td><strong>状态码</strong></td>
          <td>返回合适的HTTP状态码</td>
          <td>提供清晰的错误信息</td>
      </tr>
      <tr>
          <td><strong>缓存</strong></td>
          <td>合理设置缓存策略</td>
          <td>平衡性能和数据新鲜度</td>
      </tr>
      <tr>
          <td><strong>安全</strong></td>
          <td>实施适当的安全措施</td>
          <td>使用HTTPS和安全头</td>
      </tr>
      <tr>
          <td><strong>性能</strong></td>
          <td>优化请求和响应</td>
          <td>使用压缩和CDN</td>
      </tr>
  </tbody>
</table>
<h3 id="实际应用建议">实际应用建议</h3>
<ul>
<li><strong>API设计</strong>：遵循RESTful原则，保持接口一致性</li>
<li><strong>错误处理</strong>：提供详细的错误信息和处理建议</li>
<li><strong>文档化</strong>：维护完整的API文档</li>
<li><strong>监控</strong>：实施性能监控和日志记录</li>
<li><strong>版本控制</strong>：合理管理API版本</li>
</ul>
<p>HTTP协议是Web开发的基础，深入理解其工作原理和最佳实践对于构建高质量的Web应用至关重要。随着HTTP/2和HTTP/3的普及，掌握新特性将有助于进一步提升应用性能。</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
